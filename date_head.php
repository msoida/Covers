<?php
//            COPYRIGHT BY
//                   MICHAŁ SOIDA, 2011
//     Creative Commons Uznanie autorstwa -
//     - Użycie niekomercyjne - Na tych samych warunkach 3.0 Polska
// http://creativecommons.org/licenses/by-nc-sa/3.0/pl/legalcode
//
//                 FRAGMENT covers.php
//-----------------------------------------------------
if(array_key_exists("nodate",$_REQUEST)) $nodate = true;
else $nodate=false;
if ($nodate != true) echo "<script language=\"JavaScript\" src=\"data:application/x-javascript;base64,Ly8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQovLyBBdXRob3I6IE1hdHQgS3J1c2UgPG1hdHRAbWF0dGtydXNlLmNvbT4KLy8gV1dXOiBodHRwOi8vd3d3Lm1hdHRrcnVzZS5jb20vCi8vCi8vIE5PVElDRTogWW91IG1heSB1c2UgdGhpcyBjb2RlIGZvciBhbnkgcHVycG9zZSwgY29tbWVyY2lhbCBvcgovLyBwcml2YXRlLCB3aXRob3V0IGFueSBmdXJ0aGVyIHBlcm1pc3Npb24gZnJvbSB0aGUgYXV0aG9yLiBZb3UgbWF5Ci8vIHJlbW92ZSB0aGlzIG5vdGljZSBmcm9tIHlvdXIgZmluYWwgY29kZSBpZiB5b3Ugd2lzaCwgaG93ZXZlciBpdCBpcwovLyBhcHByZWNpYXRlZCBieSB0aGUgYXV0aG9yIGlmIGF0IGxlYXN0IG15IHdlYiBzaXRlIGFkZHJlc3MgaXMga2VwdC4KLy8KLy8gWW91IG1heSAqTk9UKiByZS1kaXN0cmlidXRlIHRoaXMgY29kZSBpbiBhbnkgd2F5IGV4Y2VwdCB0aHJvdWdoIGl0cwovLyB1c2UuIFRoYXQgbWVhbnMsIHlvdSBjYW4gaW5jbHVkZSBpdCBpbiB5b3VyIHByb2R1Y3QsIG9yIHlvdXIgd2ViCi8vIHNpdGUsIG9yIGFueSBvdGhlciBmb3JtIHdoZXJlIHRoZSBjb2RlIGlzIGFjdHVhbGx5IGJlaW5nIHVzZWQuIFlvdQovLyBtYXkgbm90IHB1dCB0aGUgcGxhaW4gamF2YXNjcmlwdCB1cCBvbiB5b3VyIHNpdGUgZm9yIGRvd25sb2FkIG9yCi8vIGluY2x1ZGUgaXQgaW4geW91ciBqYXZhc2NyaXB0IGxpYnJhcmllcyBmb3IgZG93bmxvYWQuIAovLyBJZiB5b3Ugd2lzaCB0byBzaGFyZSB0aGlzIGNvZGUgd2l0aCBvdGhlcnMsIHBsZWFzZSBqdXN0IHBvaW50IHRoZW0KLy8gdG8gdGhlIFVSTCBpbnN0ZWFkLgovLyBQbGVhc2UgRE8gTk9UIGxpbmsgZGlyZWN0bHkgdG8gbXkgLmpzIGZpbGVzIGZyb20geW91ciBzaXRlLiBDb3B5Ci8vIHRoZSBmaWxlcyB0byB5b3VyIHNlcnZlciBhbmQgdXNlIHRoZW0gdGhlcmUuIFRoYW5rIHlvdS4KLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKLyogU09VUkNFIEZJTEU6IEFuY2hvclBvc2l0aW9uLmpzICovCmZ1bmN0aW9uIGdldEFuY2hvclBvc2l0aW9uKGFuY2hvcm5hbWUpe3ZhciB1c2VXaW5kb3c9ZmFsc2U7dmFyIGNvb3JkaW5hdGVzPW5ldyBPYmplY3QoKTt2YXIgeD0wLHk9MDt2YXIgdXNlX2dlYmk9ZmFsc2UsIHVzZV9jc3M9ZmFsc2UsIHVzZV9sYXllcnM9ZmFsc2U7aWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQpe3VzZV9nZWJpPXRydWU7fWVsc2UgaWYoZG9jdW1lbnQuYWxsKXt1c2VfY3NzPXRydWU7fWVsc2UgaWYoZG9jdW1lbnQubGF5ZXJzKXt1c2VfbGF5ZXJzPXRydWU7fWlmKHVzZV9nZWJpICYmIGRvY3VtZW50LmFsbCl7eD1BbmNob3JQb3NpdGlvbl9nZXRQYWdlT2Zmc2V0TGVmdChkb2N1bWVudC5hbGxbYW5jaG9ybmFtZV0pO3k9QW5jaG9yUG9zaXRpb25fZ2V0UGFnZU9mZnNldFRvcChkb2N1bWVudC5hbGxbYW5jaG9ybmFtZV0pO31lbHNlIGlmKHVzZV9nZWJpKXt2YXIgbz1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChhbmNob3JuYW1lKTt4PUFuY2hvclBvc2l0aW9uX2dldFBhZ2VPZmZzZXRMZWZ0KG8pO3k9QW5jaG9yUG9zaXRpb25fZ2V0UGFnZU9mZnNldFRvcChvKTt9ZWxzZSBpZih1c2VfY3NzKXt4PUFuY2hvclBvc2l0aW9uX2dldFBhZ2VPZmZzZXRMZWZ0KGRvY3VtZW50LmFsbFthbmNob3JuYW1lXSk7eT1BbmNob3JQb3NpdGlvbl9nZXRQYWdlT2Zmc2V0VG9wKGRvY3VtZW50LmFsbFthbmNob3JuYW1lXSk7fWVsc2UgaWYodXNlX2xheWVycyl7dmFyIGZvdW5kPTA7Zm9yKHZhciBpPTA7aTxkb2N1bWVudC5hbmNob3JzLmxlbmd0aDtpKyspe2lmKGRvY3VtZW50LmFuY2hvcnNbaV0ubmFtZT09YW5jaG9ybmFtZSl7Zm91bmQ9MTticmVhazt9fWlmKGZvdW5kPT0wKXtjb29yZGluYXRlcy54PTA7Y29vcmRpbmF0ZXMueT0wO3JldHVybiBjb29yZGluYXRlczt9eD1kb2N1bWVudC5hbmNob3JzW2ldLng7eT1kb2N1bWVudC5hbmNob3JzW2ldLnk7fWVsc2V7Y29vcmRpbmF0ZXMueD0wO2Nvb3JkaW5hdGVzLnk9MDtyZXR1cm4gY29vcmRpbmF0ZXM7fWNvb3JkaW5hdGVzLng9eDtjb29yZGluYXRlcy55PXk7cmV0dXJuIGNvb3JkaW5hdGVzO30KZnVuY3Rpb24gZ2V0QW5jaG9yV2luZG93UG9zaXRpb24oYW5jaG9ybmFtZSl7dmFyIGNvb3JkaW5hdGVzPWdldEFuY2hvclBvc2l0aW9uKGFuY2hvcm5hbWUpO3ZhciB4PTA7dmFyIHk9MDtpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCl7aWYoaXNOYU4od2luZG93LnNjcmVlblgpKXt4PWNvb3JkaW5hdGVzLngtZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0K3dpbmRvdy5zY3JlZW5MZWZ0O3k9Y29vcmRpbmF0ZXMueS1kb2N1bWVudC5ib2R5LnNjcm9sbFRvcCt3aW5kb3cuc2NyZWVuVG9wO31lbHNle3g9Y29vcmRpbmF0ZXMueCt3aW5kb3cuc2NyZWVuWCsod2luZG93Lm91dGVyV2lkdGgtd2luZG93LmlubmVyV2lkdGgpLXdpbmRvdy5wYWdlWE9mZnNldDt5PWNvb3JkaW5hdGVzLnkrd2luZG93LnNjcmVlblkrKHdpbmRvdy5vdXRlckhlaWdodC0yNC13aW5kb3cuaW5uZXJIZWlnaHQpLXdpbmRvdy5wYWdlWU9mZnNldDt9fWVsc2UgaWYoZG9jdW1lbnQuYWxsKXt4PWNvb3JkaW5hdGVzLngtZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0K3dpbmRvdy5zY3JlZW5MZWZ0O3k9Y29vcmRpbmF0ZXMueS1kb2N1bWVudC5ib2R5LnNjcm9sbFRvcCt3aW5kb3cuc2NyZWVuVG9wO31lbHNlIGlmKGRvY3VtZW50LmxheWVycyl7eD1jb29yZGluYXRlcy54K3dpbmRvdy5zY3JlZW5YKyh3aW5kb3cub3V0ZXJXaWR0aC13aW5kb3cuaW5uZXJXaWR0aCktd2luZG93LnBhZ2VYT2Zmc2V0O3k9Y29vcmRpbmF0ZXMueSt3aW5kb3cuc2NyZWVuWSsod2luZG93Lm91dGVySGVpZ2h0LTI0LXdpbmRvdy5pbm5lckhlaWdodCktd2luZG93LnBhZ2VZT2Zmc2V0O31jb29yZGluYXRlcy54PXg7Y29vcmRpbmF0ZXMueT15O3JldHVybiBjb29yZGluYXRlczt9CmZ1bmN0aW9uIEFuY2hvclBvc2l0aW9uX2dldFBhZ2VPZmZzZXRMZWZ0KGVsKXt2YXIgb2w9ZWwub2Zmc2V0TGVmdDt3aGlsZSgoZWw9ZWwub2Zmc2V0UGFyZW50KSAhPSBudWxsKXtvbCArPSBlbC5vZmZzZXRMZWZ0O31yZXR1cm4gb2w7fQpmdW5jdGlvbiBBbmNob3JQb3NpdGlvbl9nZXRXaW5kb3dPZmZzZXRMZWZ0KGVsKXtyZXR1cm4gQW5jaG9yUG9zaXRpb25fZ2V0UGFnZU9mZnNldExlZnQoZWwpLWRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdDt9CmZ1bmN0aW9uIEFuY2hvclBvc2l0aW9uX2dldFBhZ2VPZmZzZXRUb3AoZWwpe3ZhciBvdD1lbC5vZmZzZXRUb3A7d2hpbGUoKGVsPWVsLm9mZnNldFBhcmVudCkgIT0gbnVsbCl7b3QgKz0gZWwub2Zmc2V0VG9wO31yZXR1cm4gb3Q7fQpmdW5jdGlvbiBBbmNob3JQb3NpdGlvbl9nZXRXaW5kb3dPZmZzZXRUb3AoZWwpe3JldHVybiBBbmNob3JQb3NpdGlvbl9nZXRQYWdlT2Zmc2V0VG9wKGVsKS1kb2N1bWVudC5ib2R5LnNjcm9sbFRvcDt9CgovKiBTT1VSQ0UgRklMRTogZGF0ZS5qcyAqLwp2YXIgTU9OVEhfTkFNRVM9bmV3IEFycmF5KCdKYW51YXJ5JywnRmVicnVhcnknLCdNYXJjaCcsJ0FwcmlsJywnTWF5JywnSnVuZScsJ0p1bHknLCdBdWd1c3QnLCdTZXB0ZW1iZXInLCdPY3RvYmVyJywnTm92ZW1iZXInLCdEZWNlbWJlcicsJ0phbicsJ0ZlYicsJ01hcicsJ0FwcicsJ01heScsJ0p1bicsJ0p1bCcsJ0F1ZycsJ1NlcCcsJ09jdCcsJ05vdicsJ0RlYycpO3ZhciBEQVlfTkFNRVM9bmV3IEFycmF5KCdTdW5kYXknLCdNb25kYXknLCdUdWVzZGF5JywnV2VkbmVzZGF5JywnVGh1cnNkYXknLCdGcmlkYXknLCdTYXR1cmRheScsJ1N1bicsJ01vbicsJ1R1ZScsJ1dlZCcsJ1RodScsJ0ZyaScsJ1NhdCcpOwpmdW5jdGlvbiBMWih4KXtyZXR1cm4oeDwwfHx4Pjk/IiI6IjAiKSt4fQpmdW5jdGlvbiBpc0RhdGUodmFsLGZvcm1hdCl7dmFyIGRhdGU9Z2V0RGF0ZUZyb21Gb3JtYXQodmFsLGZvcm1hdCk7aWYoZGF0ZT09MCl7cmV0dXJuIGZhbHNlO31yZXR1cm4gdHJ1ZTt9CmZ1bmN0aW9uIGNvbXBhcmVEYXRlcyhkYXRlMSxkYXRlZm9ybWF0MSxkYXRlMixkYXRlZm9ybWF0Mil7dmFyIGQxPWdldERhdGVGcm9tRm9ybWF0KGRhdGUxLGRhdGVmb3JtYXQxKTt2YXIgZDI9Z2V0RGF0ZUZyb21Gb3JtYXQoZGF0ZTIsZGF0ZWZvcm1hdDIpO2lmKGQxPT0wIHx8IGQyPT0wKXtyZXR1cm4gLTE7fWVsc2UgaWYoZDEgPiBkMil7cmV0dXJuIDE7fXJldHVybiAwO30KZnVuY3Rpb24gZm9ybWF0RGF0ZShkYXRlLGZvcm1hdCl7Zm9ybWF0PWZvcm1hdCsiIjt2YXIgcmVzdWx0PSIiO3ZhciBpX2Zvcm1hdD0wO3ZhciBjPSIiO3ZhciB0b2tlbj0iIjt2YXIgeT1kYXRlLmdldFllYXIoKSsiIjt2YXIgTT1kYXRlLmdldE1vbnRoKCkrMTt2YXIgZD1kYXRlLmdldERhdGUoKTt2YXIgRT1kYXRlLmdldERheSgpO3ZhciBIPWRhdGUuZ2V0SG91cnMoKTt2YXIgbT1kYXRlLmdldE1pbnV0ZXMoKTt2YXIgcz1kYXRlLmdldFNlY29uZHMoKTt2YXIgeXl5eSx5eSxNTU0sTU0sZGQsaGgsaCxtbSxzcyxhbXBtLEhILEgsS0ssSyxrayxrO3ZhciB2YWx1ZT1uZXcgT2JqZWN0KCk7aWYoeS5sZW5ndGggPCA0KXt5PSIiKyh5LTArMTkwMCk7fXZhbHVlWyJ5Il09IiIreTt2YWx1ZVsieXl5eSJdPXk7dmFsdWVbInl5Il09eS5zdWJzdHJpbmcoMiw0KTt2YWx1ZVsiTSJdPU07dmFsdWVbIk1NIl09TFooTSk7dmFsdWVbIk1NTSJdPU1PTlRIX05BTUVTW00tMV07dmFsdWVbIk5OTiJdPU1PTlRIX05BTUVTW00rMTFdO3ZhbHVlWyJkIl09ZDt2YWx1ZVsiZGQiXT1MWihkKTt2YWx1ZVsiRSJdPURBWV9OQU1FU1tFKzddO3ZhbHVlWyJFRSJdPURBWV9OQU1FU1tFXTt2YWx1ZVsiSCJdPUg7dmFsdWVbIkhIIl09TFooSCk7aWYoSD09MCl7dmFsdWVbImgiXT0xMjt9ZWxzZSBpZihIPjEyKXt2YWx1ZVsiaCJdPUgtMTI7fWVsc2V7dmFsdWVbImgiXT1IO312YWx1ZVsiaGgiXT1MWih2YWx1ZVsiaCJdKTtpZihIPjExKXt2YWx1ZVsiSyJdPUgtMTI7fWVsc2V7dmFsdWVbIksiXT1IO312YWx1ZVsiayJdPUgrMTt2YWx1ZVsiS0siXT1MWih2YWx1ZVsiSyJdKTt2YWx1ZVsia2siXT1MWih2YWx1ZVsiayJdKTtpZihIID4gMTEpe3ZhbHVlWyJhIl09IlBNIjt9ZWxzZXt2YWx1ZVsiYSJdPSJBTSI7fXZhbHVlWyJtIl09bTt2YWx1ZVsibW0iXT1MWihtKTt2YWx1ZVsicyJdPXM7dmFsdWVbInNzIl09TFoocyk7d2hpbGUoaV9mb3JtYXQgPCBmb3JtYXQubGVuZ3RoKXtjPWZvcm1hdC5jaGFyQXQoaV9mb3JtYXQpO3Rva2VuPSIiO3doaWxlKChmb3JtYXQuY2hhckF0KGlfZm9ybWF0KT09YykgJiYoaV9mb3JtYXQgPCBmb3JtYXQubGVuZ3RoKSl7dG9rZW4gKz0gZm9ybWF0LmNoYXJBdChpX2Zvcm1hdCsrKTt9aWYodmFsdWVbdG9rZW5dICE9IG51bGwpe3Jlc3VsdD1yZXN1bHQgKyB2YWx1ZVt0b2tlbl07fWVsc2V7cmVzdWx0PXJlc3VsdCArIHRva2VuO319cmV0dXJuIHJlc3VsdDt9CmZ1bmN0aW9uIF9pc0ludGVnZXIodmFsKXt2YXIgZGlnaXRzPSIxMjM0NTY3ODkwIjtmb3IodmFyIGk9MDtpIDwgdmFsLmxlbmd0aDtpKyspe2lmKGRpZ2l0cy5pbmRleE9mKHZhbC5jaGFyQXQoaSkpPT0tMSl7cmV0dXJuIGZhbHNlO319cmV0dXJuIHRydWU7fQpmdW5jdGlvbiBfZ2V0SW50KHN0cixpLG1pbmxlbmd0aCxtYXhsZW5ndGgpe2Zvcih2YXIgeD1tYXhsZW5ndGg7eD49bWlubGVuZ3RoO3gtLSl7dmFyIHRva2VuPXN0ci5zdWJzdHJpbmcoaSxpK3gpO2lmKHRva2VuLmxlbmd0aCA8IG1pbmxlbmd0aCl7cmV0dXJuIG51bGw7fWlmKF9pc0ludGVnZXIodG9rZW4pKXtyZXR1cm4gdG9rZW47fX1yZXR1cm4gbnVsbDt9CmZ1bmN0aW9uIGdldERhdGVGcm9tRm9ybWF0KHZhbCxmb3JtYXQpe3ZhbD12YWwrIiI7Zm9ybWF0PWZvcm1hdCsiIjt2YXIgaV92YWw9MDt2YXIgaV9mb3JtYXQ9MDt2YXIgYz0iIjt2YXIgdG9rZW49IiI7dmFyIHRva2VuMj0iIjt2YXIgeCx5O3ZhciBub3c9bmV3IERhdGUoKTt2YXIgeWVhcj1ub3cuZ2V0WWVhcigpO3ZhciBtb250aD1ub3cuZ2V0TW9udGgoKSsxO3ZhciBkYXRlPTE7dmFyIGhoPW5vdy5nZXRIb3VycygpO3ZhciBtbT1ub3cuZ2V0TWludXRlcygpO3ZhciBzcz1ub3cuZ2V0U2Vjb25kcygpO3ZhciBhbXBtPSIiO3doaWxlKGlfZm9ybWF0IDwgZm9ybWF0Lmxlbmd0aCl7Yz1mb3JtYXQuY2hhckF0KGlfZm9ybWF0KTt0b2tlbj0iIjt3aGlsZSgoZm9ybWF0LmNoYXJBdChpX2Zvcm1hdCk9PWMpICYmKGlfZm9ybWF0IDwgZm9ybWF0Lmxlbmd0aCkpe3Rva2VuICs9IGZvcm1hdC5jaGFyQXQoaV9mb3JtYXQrKyk7fWlmKHRva2VuPT0ieXl5eSIgfHwgdG9rZW49PSJ5eSIgfHwgdG9rZW49PSJ5Iil7aWYodG9rZW49PSJ5eXl5Iil7eD00O3k9NDt9aWYodG9rZW49PSJ5eSIpe3g9Mjt5PTI7fWlmKHRva2VuPT0ieSIpe3g9Mjt5PTQ7fXllYXI9X2dldEludCh2YWwsaV92YWwseCx5KTtpZih5ZWFyPT1udWxsKXtyZXR1cm4gMDt9aV92YWwgKz0geWVhci5sZW5ndGg7aWYoeWVhci5sZW5ndGg9PTIpe2lmKHllYXIgPiA3MCl7eWVhcj0xOTAwKyh5ZWFyLTApO31lbHNle3llYXI9MjAwMCsoeWVhci0wKTt9fX1lbHNlIGlmKHRva2VuPT0iTU1NInx8dG9rZW49PSJOTk4iKXttb250aD0wO2Zvcih2YXIgaT0wO2k8TU9OVEhfTkFNRVMubGVuZ3RoO2krKyl7dmFyIG1vbnRoX25hbWU9TU9OVEhfTkFNRVNbaV07aWYodmFsLnN1YnN0cmluZyhpX3ZhbCxpX3ZhbCttb250aF9uYW1lLmxlbmd0aCkudG9Mb3dlckNhc2UoKT09bW9udGhfbmFtZS50b0xvd2VyQ2FzZSgpKXtpZih0b2tlbj09Ik1NTSJ8fCh0b2tlbj09Ik5OTiImJmk+MTEpKXttb250aD1pKzE7aWYobW9udGg+MTIpe21vbnRoIC09IDEyO31pX3ZhbCArPSBtb250aF9uYW1lLmxlbmd0aDticmVhazt9fX1pZigobW9udGggPCAxKXx8KG1vbnRoPjEyKSl7cmV0dXJuIDA7fX1lbHNlIGlmKHRva2VuPT0iRUUifHx0b2tlbj09IkUiKXtmb3IodmFyIGk9MDtpPERBWV9OQU1FUy5sZW5ndGg7aSsrKXt2YXIgZGF5X25hbWU9REFZX05BTUVTW2ldO2lmKHZhbC5zdWJzdHJpbmcoaV92YWwsaV92YWwrZGF5X25hbWUubGVuZ3RoKS50b0xvd2VyQ2FzZSgpPT1kYXlfbmFtZS50b0xvd2VyQ2FzZSgpKXtpX3ZhbCArPSBkYXlfbmFtZS5sZW5ndGg7YnJlYWs7fX19ZWxzZSBpZih0b2tlbj09Ik1NInx8dG9rZW49PSJNIil7bW9udGg9X2dldEludCh2YWwsaV92YWwsdG9rZW4ubGVuZ3RoLDIpO2lmKG1vbnRoPT1udWxsfHwobW9udGg8MSl8fChtb250aD4xMikpe3JldHVybiAwO31pX3ZhbCs9bW9udGgubGVuZ3RoO31lbHNlIGlmKHRva2VuPT0iZGQifHx0b2tlbj09ImQiKXtkYXRlPV9nZXRJbnQodmFsLGlfdmFsLHRva2VuLmxlbmd0aCwyKTtpZihkYXRlPT1udWxsfHwoZGF0ZTwxKXx8KGRhdGU+MzEpKXtyZXR1cm4gMDt9aV92YWwrPWRhdGUubGVuZ3RoO31lbHNlIGlmKHRva2VuPT0iaGgifHx0b2tlbj09ImgiKXtoaD1fZ2V0SW50KHZhbCxpX3ZhbCx0b2tlbi5sZW5ndGgsMik7aWYoaGg9PW51bGx8fChoaDwxKXx8KGhoPjEyKSl7cmV0dXJuIDA7fWlfdmFsKz1oaC5sZW5ndGg7fWVsc2UgaWYodG9rZW49PSJISCJ8fHRva2VuPT0iSCIpe2hoPV9nZXRJbnQodmFsLGlfdmFsLHRva2VuLmxlbmd0aCwyKTtpZihoaD09bnVsbHx8KGhoPDApfHwoaGg+MjMpKXtyZXR1cm4gMDt9aV92YWwrPWhoLmxlbmd0aDt9ZWxzZSBpZih0b2tlbj09IktLInx8dG9rZW49PSJLIil7aGg9X2dldEludCh2YWwsaV92YWwsdG9rZW4ubGVuZ3RoLDIpO2lmKGhoPT1udWxsfHwoaGg8MCl8fChoaD4xMSkpe3JldHVybiAwO31pX3ZhbCs9aGgubGVuZ3RoO31lbHNlIGlmKHRva2VuPT0ia2sifHx0b2tlbj09ImsiKXtoaD1fZ2V0SW50KHZhbCxpX3ZhbCx0b2tlbi5sZW5ndGgsMik7aWYoaGg9PW51bGx8fChoaDwxKXx8KGhoPjI0KSl7cmV0dXJuIDA7fWlfdmFsKz1oaC5sZW5ndGg7aGgtLTt9ZWxzZSBpZih0b2tlbj09Im1tInx8dG9rZW49PSJtIil7bW09X2dldEludCh2YWwsaV92YWwsdG9rZW4ubGVuZ3RoLDIpO2lmKG1tPT1udWxsfHwobW08MCl8fChtbT41OSkpe3JldHVybiAwO31pX3ZhbCs9bW0ubGVuZ3RoO31lbHNlIGlmKHRva2VuPT0ic3MifHx0b2tlbj09InMiKXtzcz1fZ2V0SW50KHZhbCxpX3ZhbCx0b2tlbi5sZW5ndGgsMik7aWYoc3M9PW51bGx8fChzczwwKXx8KHNzPjU5KSl7cmV0dXJuIDA7fWlfdmFsKz1zcy5sZW5ndGg7fWVsc2UgaWYodG9rZW49PSJhIil7aWYodmFsLnN1YnN0cmluZyhpX3ZhbCxpX3ZhbCsyKS50b0xvd2VyQ2FzZSgpPT0iYW0iKXthbXBtPSJBTSI7fWVsc2UgaWYodmFsLnN1YnN0cmluZyhpX3ZhbCxpX3ZhbCsyKS50b0xvd2VyQ2FzZSgpPT0icG0iKXthbXBtPSJQTSI7fWVsc2V7cmV0dXJuIDA7fWlfdmFsKz0yO31lbHNle2lmKHZhbC5zdWJzdHJpbmcoaV92YWwsaV92YWwrdG9rZW4ubGVuZ3RoKSE9dG9rZW4pe3JldHVybiAwO31lbHNle2lfdmFsKz10b2tlbi5sZW5ndGg7fX19aWYoaV92YWwgIT0gdmFsLmxlbmd0aCl7cmV0dXJuIDA7fWlmKG1vbnRoPT0yKXtpZiggKCh5ZWFyJTQ9PTApJiYoeWVhciUxMDAgIT0gMCkgKSB8fCh5ZWFyJTQwMD09MCkgKXtpZihkYXRlID4gMjkpe3JldHVybiAwO319ZWxzZXtpZihkYXRlID4gMjgpe3JldHVybiAwO319fWlmKChtb250aD09NCl8fChtb250aD09Nil8fChtb250aD09OSl8fChtb250aD09MTEpKXtpZihkYXRlID4gMzApe3JldHVybiAwO319aWYoaGg8MTIgJiYgYW1wbT09IlBNIil7aGg9aGgtMCsxMjt9ZWxzZSBpZihoaD4xMSAmJiBhbXBtPT0iQU0iKXtoaC09MTI7fXZhciBuZXdkYXRlPW5ldyBEYXRlKHllYXIsbW9udGgtMSxkYXRlLGhoLG1tLHNzKTtyZXR1cm4gbmV3ZGF0ZS5nZXRUaW1lKCk7fQpmdW5jdGlvbiBwYXJzZURhdGUodmFsKXt2YXIgcHJlZmVyRXVybz0oYXJndW1lbnRzLmxlbmd0aD09Mik/YXJndW1lbnRzWzFdOmZhbHNlO2dlbmVyYWxGb3JtYXRzPW5ldyBBcnJheSgneS1NLWQnLCdNTU0gZCwgeScsJ01NTSBkLHknLCd5LU1NTS1kJywnZC1NTU0teScsJ01NTSBkJyk7bW9udGhGaXJzdD1uZXcgQXJyYXkoJ00vZC95JywnTS1kLXknLCdNLmQueScsJ01NTS1kJywnTS9kJywnTS1kJyk7ZGF0ZUZpcnN0ID1uZXcgQXJyYXkoJ2QvTS95JywnZC1NLXknLCdkLk0ueScsJ2QtTU1NJywnZC9NJywnZC1NJyk7dmFyIGNoZWNrTGlzdD1uZXcgQXJyYXkoJ2dlbmVyYWxGb3JtYXRzJyxwcmVmZXJFdXJvPydkYXRlRmlyc3QnOidtb250aEZpcnN0JyxwcmVmZXJFdXJvPydtb250aEZpcnN0JzonZGF0ZUZpcnN0Jyk7dmFyIGQ9bnVsbDtmb3IodmFyIGk9MDtpPGNoZWNrTGlzdC5sZW5ndGg7aSsrKXt2YXIgbD13aW5kb3dbY2hlY2tMaXN0W2ldXTtmb3IodmFyIGo9MDtqPGwubGVuZ3RoO2orKyl7ZD1nZXREYXRlRnJvbUZvcm1hdCh2YWwsbFtqXSk7aWYoZCE9MCl7cmV0dXJuIG5ldyBEYXRlKGQpO319fXJldHVybiBudWxsO30KCi8qIFNPVVJDRSBGSUxFOiBQb3B1cFdpbmRvdy5qcyAqLwpmdW5jdGlvbiBQb3B1cFdpbmRvd19nZXRYWVBvc2l0aW9uKGFuY2hvcm5hbWUpe3ZhciBjb29yZGluYXRlcztpZih0aGlzLnR5cGUgPT0gIldJTkRPVyIpe2Nvb3JkaW5hdGVzID0gZ2V0QW5jaG9yV2luZG93UG9zaXRpb24oYW5jaG9ybmFtZSk7fWVsc2V7Y29vcmRpbmF0ZXMgPSBnZXRBbmNob3JQb3NpdGlvbihhbmNob3JuYW1lKTt9dGhpcy54ID0gY29vcmRpbmF0ZXMueDt0aGlzLnkgPSBjb29yZGluYXRlcy55O30KZnVuY3Rpb24gUG9wdXBXaW5kb3dfc2V0U2l6ZSh3aWR0aCxoZWlnaHQpe3RoaXMud2lkdGggPSB3aWR0aDt0aGlzLmhlaWdodCA9IGhlaWdodDt9CmZ1bmN0aW9uIFBvcHVwV2luZG93X3BvcHVsYXRlKGNvbnRlbnRzKXt0aGlzLmNvbnRlbnRzID0gY29udGVudHM7dGhpcy5wb3B1bGF0ZWQgPSBmYWxzZTt9CmZ1bmN0aW9uIFBvcHVwV2luZG93X3NldFVybCh1cmwpe3RoaXMudXJsID0gdXJsO30KZnVuY3Rpb24gUG9wdXBXaW5kb3dfc2V0V2luZG93UHJvcGVydGllcyhwcm9wcyl7dGhpcy53aW5kb3dQcm9wZXJ0aWVzID0gcHJvcHM7fQpmdW5jdGlvbiBQb3B1cFdpbmRvd19yZWZyZXNoKCl7aWYodGhpcy5kaXZOYW1lICE9IG51bGwpe2lmKHRoaXMudXNlX2dlYmkpe2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuZGl2TmFtZSkuaW5uZXJIVE1MID0gdGhpcy5jb250ZW50czt9ZWxzZSBpZih0aGlzLnVzZV9jc3Mpe2RvY3VtZW50LmFsbFt0aGlzLmRpdk5hbWVdLmlubmVySFRNTCA9IHRoaXMuY29udGVudHM7fWVsc2UgaWYodGhpcy51c2VfbGF5ZXJzKXt2YXIgZCA9IGRvY3VtZW50LmxheWVyc1t0aGlzLmRpdk5hbWVdO2QuZG9jdW1lbnQub3BlbigpO2QuZG9jdW1lbnQud3JpdGVsbih0aGlzLmNvbnRlbnRzKTtkLmRvY3VtZW50LmNsb3NlKCk7fX1lbHNle2lmKHRoaXMucG9wdXBXaW5kb3cgIT0gbnVsbCAmJiAhdGhpcy5wb3B1cFdpbmRvdy5jbG9zZWQpe2lmKHRoaXMudXJsIT0iIil7dGhpcy5wb3B1cFdpbmRvdy5sb2NhdGlvbi5ocmVmPXRoaXMudXJsO31lbHNle3RoaXMucG9wdXBXaW5kb3cuZG9jdW1lbnQub3BlbigpO3RoaXMucG9wdXBXaW5kb3cuZG9jdW1lbnQud3JpdGVsbih0aGlzLmNvbnRlbnRzKTt0aGlzLnBvcHVwV2luZG93LmRvY3VtZW50LmNsb3NlKCk7fXRoaXMucG9wdXBXaW5kb3cuZm9jdXMoKTt9fX0KZnVuY3Rpb24gUG9wdXBXaW5kb3dfc2hvd1BvcHVwKGFuY2hvcm5hbWUpe3RoaXMuZ2V0WFlQb3NpdGlvbihhbmNob3JuYW1lKTt0aGlzLnggKz0gdGhpcy5vZmZzZXRYO3RoaXMueSArPSB0aGlzLm9mZnNldFk7aWYoIXRoaXMucG9wdWxhdGVkICYmKHRoaXMuY29udGVudHMgIT0gIiIpKXt0aGlzLnBvcHVsYXRlZCA9IHRydWU7dGhpcy5yZWZyZXNoKCk7fWlmKHRoaXMuZGl2TmFtZSAhPSBudWxsKXtpZih0aGlzLnVzZV9nZWJpKXtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmRpdk5hbWUpLnN0eWxlLmxlZnQgPSB0aGlzLnggKyAicHgiO2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuZGl2TmFtZSkuc3R5bGUudG9wID0gdGhpcy55ICsgInB4Ijtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmRpdk5hbWUpLnN0eWxlLnZpc2liaWxpdHkgPSAidmlzaWJsZSI7fWVsc2UgaWYodGhpcy51c2VfY3NzKXtkb2N1bWVudC5hbGxbdGhpcy5kaXZOYW1lXS5zdHlsZS5sZWZ0ID0gdGhpcy54O2RvY3VtZW50LmFsbFt0aGlzLmRpdk5hbWVdLnN0eWxlLnRvcCA9IHRoaXMueTtkb2N1bWVudC5hbGxbdGhpcy5kaXZOYW1lXS5zdHlsZS52aXNpYmlsaXR5ID0gInZpc2libGUiO31lbHNlIGlmKHRoaXMudXNlX2xheWVycyl7ZG9jdW1lbnQubGF5ZXJzW3RoaXMuZGl2TmFtZV0ubGVmdCA9IHRoaXMueDtkb2N1bWVudC5sYXllcnNbdGhpcy5kaXZOYW1lXS50b3AgPSB0aGlzLnk7ZG9jdW1lbnQubGF5ZXJzW3RoaXMuZGl2TmFtZV0udmlzaWJpbGl0eSA9ICJ2aXNpYmxlIjt9fWVsc2V7aWYodGhpcy5wb3B1cFdpbmRvdyA9PSBudWxsIHx8IHRoaXMucG9wdXBXaW5kb3cuY2xvc2VkKXtpZih0aGlzLng8MCl7dGhpcy54PTA7fWlmKHRoaXMueTwwKXt0aGlzLnk9MDt9aWYoc2NyZWVuICYmIHNjcmVlbi5hdmFpbEhlaWdodCl7aWYoKHRoaXMueSArIHRoaXMuaGVpZ2h0KSA+IHNjcmVlbi5hdmFpbEhlaWdodCl7dGhpcy55ID0gc2NyZWVuLmF2YWlsSGVpZ2h0IC0gdGhpcy5oZWlnaHQ7fX1pZihzY3JlZW4gJiYgc2NyZWVuLmF2YWlsV2lkdGgpe2lmKCh0aGlzLnggKyB0aGlzLndpZHRoKSA+IHNjcmVlbi5hdmFpbFdpZHRoKXt0aGlzLnggPSBzY3JlZW4uYXZhaWxXaWR0aCAtIHRoaXMud2lkdGg7fX12YXIgYXZvaWRBYm91dEJsYW5rID0gd2luZG93Lm9wZXJhIHx8KCBkb2N1bWVudC5sYXllcnMgJiYgIW5hdmlnYXRvci5taW1lVHlwZXNbJyonXSkgfHwgbmF2aWdhdG9yLnZlbmRvciA9PSAnS0RFJyB8fCggZG9jdW1lbnQuY2hpbGROb2RlcyAmJiAhZG9jdW1lbnQuYWxsICYmICFuYXZpZ2F0b3IudGFpbnRFbmFibGVkKTt0aGlzLnBvcHVwV2luZG93ID0gd2luZG93Lm9wZW4oYXZvaWRBYm91dEJsYW5rPyIiOiJhYm91dDpibGFuayIsIndpbmRvd18iK2FuY2hvcm5hbWUsdGhpcy53aW5kb3dQcm9wZXJ0aWVzKyIsd2lkdGg9Iit0aGlzLndpZHRoKyIsaGVpZ2h0PSIrdGhpcy5oZWlnaHQrIixzY3JlZW5YPSIrdGhpcy54KyIsbGVmdD0iK3RoaXMueCsiLHNjcmVlblk9Iit0aGlzLnkrIix0b3A9Iit0aGlzLnkrIiIpO310aGlzLnJlZnJlc2goKTt9fQpmdW5jdGlvbiBQb3B1cFdpbmRvd19oaWRlUG9wdXAoKXtpZih0aGlzLmRpdk5hbWUgIT0gbnVsbCl7aWYodGhpcy51c2VfZ2ViaSl7ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5kaXZOYW1lKS5zdHlsZS52aXNpYmlsaXR5ID0gImhpZGRlbiI7fWVsc2UgaWYodGhpcy51c2VfY3NzKXtkb2N1bWVudC5hbGxbdGhpcy5kaXZOYW1lXS5zdHlsZS52aXNpYmlsaXR5ID0gImhpZGRlbiI7fWVsc2UgaWYodGhpcy51c2VfbGF5ZXJzKXtkb2N1bWVudC5sYXllcnNbdGhpcy5kaXZOYW1lXS52aXNpYmlsaXR5ID0gImhpZGRlbiI7fX1lbHNle2lmKHRoaXMucG9wdXBXaW5kb3cgJiYgIXRoaXMucG9wdXBXaW5kb3cuY2xvc2VkKXt0aGlzLnBvcHVwV2luZG93LmNsb3NlKCk7dGhpcy5wb3B1cFdpbmRvdyA9IG51bGw7fX19CmZ1bmN0aW9uIFBvcHVwV2luZG93X2lzQ2xpY2tlZChlKXtpZih0aGlzLmRpdk5hbWUgIT0gbnVsbCl7aWYodGhpcy51c2VfbGF5ZXJzKXt2YXIgY2xpY2tYID0gZS5wYWdlWDt2YXIgY2xpY2tZID0gZS5wYWdlWTt2YXIgdCA9IGRvY3VtZW50LmxheWVyc1t0aGlzLmRpdk5hbWVdO2lmKChjbGlja1ggPiB0LmxlZnQpICYmKGNsaWNrWCA8IHQubGVmdCt0LmNsaXAud2lkdGgpICYmKGNsaWNrWSA+IHQudG9wKSAmJihjbGlja1kgPCB0LnRvcCt0LmNsaXAuaGVpZ2h0KSl7cmV0dXJuIHRydWU7fWVsc2V7cmV0dXJuIGZhbHNlO319ZWxzZSBpZihkb2N1bWVudC5hbGwpe3ZhciB0ID0gd2luZG93LmV2ZW50LnNyY0VsZW1lbnQ7d2hpbGUodC5wYXJlbnRFbGVtZW50ICE9IG51bGwpe2lmKHQuaWQ9PXRoaXMuZGl2TmFtZSl7cmV0dXJuIHRydWU7fXQgPSB0LnBhcmVudEVsZW1lbnQ7fXJldHVybiBmYWxzZTt9ZWxzZSBpZih0aGlzLnVzZV9nZWJpICYmIGUpe3ZhciB0ID0gZS5vcmlnaW5hbFRhcmdldDt3aGlsZSh0LnBhcmVudE5vZGUgIT0gbnVsbCl7aWYodC5pZD09dGhpcy5kaXZOYW1lKXtyZXR1cm4gdHJ1ZTt9dCA9IHQucGFyZW50Tm9kZTt9cmV0dXJuIGZhbHNlO31yZXR1cm4gZmFsc2U7fXJldHVybiBmYWxzZTt9CmZ1bmN0aW9uIFBvcHVwV2luZG93X2hpZGVJZk5vdENsaWNrZWQoZSl7aWYodGhpcy5hdXRvSGlkZUVuYWJsZWQgJiYgIXRoaXMuaXNDbGlja2VkKGUpKXt0aGlzLmhpZGVQb3B1cCgpO319CmZ1bmN0aW9uIFBvcHVwV2luZG93X2F1dG9IaWRlKCl7dGhpcy5hdXRvSGlkZUVuYWJsZWQgPSB0cnVlO30KZnVuY3Rpb24gUG9wdXBXaW5kb3dfaGlkZVBvcHVwV2luZG93cyhlKXtmb3IodmFyIGk9MDtpPHBvcHVwV2luZG93T2JqZWN0cy5sZW5ndGg7aSsrKXtpZihwb3B1cFdpbmRvd09iamVjdHNbaV0gIT0gbnVsbCl7dmFyIHAgPSBwb3B1cFdpbmRvd09iamVjdHNbaV07cC5oaWRlSWZOb3RDbGlja2VkKGUpO319fQpmdW5jdGlvbiBQb3B1cFdpbmRvd19hdHRhY2hMaXN0ZW5lcigpe2lmKGRvY3VtZW50LmxheWVycyl7ZG9jdW1lbnQuY2FwdHVyZUV2ZW50cyhFdmVudC5NT1VTRVVQKTt9d2luZG93LnBvcHVwV2luZG93T2xkRXZlbnRMaXN0ZW5lciA9IGRvY3VtZW50Lm9ubW91c2V1cDtpZih3aW5kb3cucG9wdXBXaW5kb3dPbGRFdmVudExpc3RlbmVyICE9IG51bGwpe2RvY3VtZW50Lm9ubW91c2V1cCA9IG5ldyBGdW5jdGlvbigid2luZG93LnBvcHVwV2luZG93T2xkRXZlbnRMaXN0ZW5lcigpO1BvcHVwV2luZG93X2hpZGVQb3B1cFdpbmRvd3MoKTsiKTt9ZWxzZXtkb2N1bWVudC5vbm1vdXNldXAgPSBQb3B1cFdpbmRvd19oaWRlUG9wdXBXaW5kb3dzO319CmZ1bmN0aW9uIFBvcHVwV2luZG93KCl7aWYoIXdpbmRvdy5wb3B1cFdpbmRvd0luZGV4KXt3aW5kb3cucG9wdXBXaW5kb3dJbmRleCA9IDA7fWlmKCF3aW5kb3cucG9wdXBXaW5kb3dPYmplY3RzKXt3aW5kb3cucG9wdXBXaW5kb3dPYmplY3RzID0gbmV3IEFycmF5KCk7fWlmKCF3aW5kb3cubGlzdGVuZXJBdHRhY2hlZCl7d2luZG93Lmxpc3RlbmVyQXR0YWNoZWQgPSB0cnVlO1BvcHVwV2luZG93X2F0dGFjaExpc3RlbmVyKCk7fXRoaXMuaW5kZXggPSBwb3B1cFdpbmRvd0luZGV4Kys7cG9wdXBXaW5kb3dPYmplY3RzW3RoaXMuaW5kZXhdID0gdGhpczt0aGlzLmRpdk5hbWUgPSBudWxsO3RoaXMucG9wdXBXaW5kb3cgPSBudWxsO3RoaXMud2lkdGg9MDt0aGlzLmhlaWdodD0wO3RoaXMucG9wdWxhdGVkID0gZmFsc2U7dGhpcy52aXNpYmxlID0gZmFsc2U7dGhpcy5hdXRvSGlkZUVuYWJsZWQgPSBmYWxzZTt0aGlzLmNvbnRlbnRzID0gIiI7dGhpcy51cmw9IiI7dGhpcy53aW5kb3dQcm9wZXJ0aWVzPSJ0b29sYmFyPW5vLGxvY2F0aW9uPW5vLHN0YXR1cz1ubyxtZW51YmFyPW5vLHNjcm9sbGJhcnM9YXV0byxyZXNpemFibGUsYWx3YXlzUmFpc2VkLGRlcGVuZGVudCx0aXRsZWJhcj1ubyI7aWYoYXJndW1lbnRzLmxlbmd0aD4wKXt0aGlzLnR5cGU9IkRJViI7dGhpcy5kaXZOYW1lID0gYXJndW1lbnRzWzBdO31lbHNle3RoaXMudHlwZT0iV0lORE9XIjt9dGhpcy51c2VfZ2ViaSA9IGZhbHNlO3RoaXMudXNlX2NzcyA9IGZhbHNlO3RoaXMudXNlX2xheWVycyA9IGZhbHNlO2lmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKXt0aGlzLnVzZV9nZWJpID0gdHJ1ZTt9ZWxzZSBpZihkb2N1bWVudC5hbGwpe3RoaXMudXNlX2NzcyA9IHRydWU7fWVsc2UgaWYoZG9jdW1lbnQubGF5ZXJzKXt0aGlzLnVzZV9sYXllcnMgPSB0cnVlO31lbHNle3RoaXMudHlwZSA9ICJXSU5ET1ciO310aGlzLm9mZnNldFggPSAwO3RoaXMub2Zmc2V0WSA9IDA7dGhpcy5nZXRYWVBvc2l0aW9uID0gUG9wdXBXaW5kb3dfZ2V0WFlQb3NpdGlvbjt0aGlzLnBvcHVsYXRlID0gUG9wdXBXaW5kb3dfcG9wdWxhdGU7dGhpcy5zZXRVcmwgPSBQb3B1cFdpbmRvd19zZXRVcmw7dGhpcy5zZXRXaW5kb3dQcm9wZXJ0aWVzID0gUG9wdXBXaW5kb3dfc2V0V2luZG93UHJvcGVydGllczt0aGlzLnJlZnJlc2ggPSBQb3B1cFdpbmRvd19yZWZyZXNoO3RoaXMuc2hvd1BvcHVwID0gUG9wdXBXaW5kb3dfc2hvd1BvcHVwO3RoaXMuaGlkZVBvcHVwID0gUG9wdXBXaW5kb3dfaGlkZVBvcHVwO3RoaXMuc2V0U2l6ZSA9IFBvcHVwV2luZG93X3NldFNpemU7dGhpcy5pc0NsaWNrZWQgPSBQb3B1cFdpbmRvd19pc0NsaWNrZWQ7dGhpcy5hdXRvSGlkZSA9IFBvcHVwV2luZG93X2F1dG9IaWRlO3RoaXMuaGlkZUlmTm90Q2xpY2tlZCA9IFBvcHVwV2luZG93X2hpZGVJZk5vdENsaWNrZWQ7fQoKCi8qIFNPVVJDRSBGSUxFOiBDYWxlbmRhclBvcHVwLmpzICovCmZ1bmN0aW9uIENQX3N0b3AoZSkgeyBpZiAoZSAmJiBlLnN0b3BQcm9wYWdhdGlvbikgeyBlLnN0b3BQcm9wYWdhdGlvbigpOyB9IH0KZnVuY3Rpb24gQ2FsZW5kYXJQb3B1cCgpe3ZhciBjO2lmKGFyZ3VtZW50cy5sZW5ndGg+MCl7YyA9IG5ldyBQb3B1cFdpbmRvdyhhcmd1bWVudHNbMF0pO31lbHNle2MgPSBuZXcgUG9wdXBXaW5kb3coKTtjLnNldFNpemUoMTUwLDE3NSk7fWMub2Zmc2V0WCA9IC0xNTI7Yy5vZmZzZXRZID0gMjU7Yy5hdXRvSGlkZSgpO2MubW9udGhOYW1lcyA9IG5ldyBBcnJheSgiSmFudWFyeSIsIkZlYnJ1YXJ5IiwiTWFyY2giLCJBcHJpbCIsIk1heSIsIkp1bmUiLCJKdWx5IiwiQXVndXN0IiwiU2VwdGVtYmVyIiwiT2N0b2JlciIsIk5vdmVtYmVyIiwiRGVjZW1iZXIiKTtjLm1vbnRoQWJicmV2aWF0aW9ucyA9IG5ldyBBcnJheSgiSmFuIiwiRmViIiwiTWFyIiwiQXByIiwiTWF5IiwiSnVuIiwiSnVsIiwiQXVnIiwiU2VwIiwiT2N0IiwiTm92IiwiRGVjIik7Yy5kYXlIZWFkZXJzID0gbmV3IEFycmF5KCJTIiwiTSIsIlQiLCJXIiwiVCIsIkYiLCJTIik7Yy5yZXR1cm5GdW5jdGlvbiA9ICJDUF90bXBSZXR1cm5GdW5jdGlvbiI7Yy5yZXR1cm5Nb250aEZ1bmN0aW9uID0gIkNQX3RtcFJldHVybk1vbnRoRnVuY3Rpb24iO2MucmV0dXJuUXVhcnRlckZ1bmN0aW9uID0gIkNQX3RtcFJldHVyblF1YXJ0ZXJGdW5jdGlvbiI7Yy5yZXR1cm5ZZWFyRnVuY3Rpb24gPSAiQ1BfdG1wUmV0dXJuWWVhckZ1bmN0aW9uIjtjLndlZWtTdGFydERheSA9IDA7Yy5pc1Nob3dZZWFyTmF2aWdhdGlvbiA9IGZhbHNlO2MuZGlzcGxheVR5cGUgPSAiZGF0ZSI7Yy5kaXNhYmxlZFdlZWtEYXlzID0gbmV3IE9iamVjdCgpO2MuZGlzYWJsZWREYXRlc0V4cHJlc3Npb24gPSAiIjtjLnllYXJTZWxlY3RTdGFydE9mZnNldCA9IDI7Yy5jdXJyZW50RGF0ZSA9IG51bGw7Yy50b2RheVRleHQ9IlRvZGF5IjtjLmNzc1ByZWZpeD0iIjtjLmlzU2hvd05hdmlnYXRpb25Ecm9wZG93bnM9ZmFsc2U7Yy5pc1Nob3dZZWFyTmF2aWdhdGlvbklucHV0PWZhbHNlO3dpbmRvdy5DUF9jYWxlbmRhck9iamVjdCA9IG51bGw7d2luZG93LkNQX3RhcmdldElucHV0ID0gbnVsbDt3aW5kb3cuQ1BfZGF0ZUZvcm1hdCA9ICJNTS9kZC95eXl5IjtjLmNvcHlNb250aE5hbWVzVG9XaW5kb3cgPSBDUF9jb3B5TW9udGhOYW1lc1RvV2luZG93O2Muc2V0UmV0dXJuRnVuY3Rpb24gPSBDUF9zZXRSZXR1cm5GdW5jdGlvbjtjLnNldFJldHVybk1vbnRoRnVuY3Rpb24gPSBDUF9zZXRSZXR1cm5Nb250aEZ1bmN0aW9uO2Muc2V0UmV0dXJuUXVhcnRlckZ1bmN0aW9uID0gQ1Bfc2V0UmV0dXJuUXVhcnRlckZ1bmN0aW9uO2Muc2V0UmV0dXJuWWVhckZ1bmN0aW9uID0gQ1Bfc2V0UmV0dXJuWWVhckZ1bmN0aW9uO2Muc2V0TW9udGhOYW1lcyA9IENQX3NldE1vbnRoTmFtZXM7Yy5zZXRNb250aEFiYnJldmlhdGlvbnMgPSBDUF9zZXRNb250aEFiYnJldmlhdGlvbnM7Yy5zZXREYXlIZWFkZXJzID0gQ1Bfc2V0RGF5SGVhZGVycztjLnNldFdlZWtTdGFydERheSA9IENQX3NldFdlZWtTdGFydERheTtjLnNldERpc3BsYXlUeXBlID0gQ1Bfc2V0RGlzcGxheVR5cGU7Yy5zZXREaXNhYmxlZFdlZWtEYXlzID0gQ1Bfc2V0RGlzYWJsZWRXZWVrRGF5cztjLmFkZERpc2FibGVkRGF0ZXMgPSBDUF9hZGREaXNhYmxlZERhdGVzO2Muc2V0WWVhclNlbGVjdFN0YXJ0T2Zmc2V0ID0gQ1Bfc2V0WWVhclNlbGVjdFN0YXJ0T2Zmc2V0O2Muc2V0VG9kYXlUZXh0ID0gQ1Bfc2V0VG9kYXlUZXh0O2Muc2hvd1llYXJOYXZpZ2F0aW9uID0gQ1Bfc2hvd1llYXJOYXZpZ2F0aW9uO2Muc2hvd0NhbGVuZGFyID0gQ1Bfc2hvd0NhbGVuZGFyO2MuaGlkZUNhbGVuZGFyID0gQ1BfaGlkZUNhbGVuZGFyO2MuZ2V0U3R5bGVzID0gZ2V0Q2FsZW5kYXJTdHlsZXM7Yy5yZWZyZXNoQ2FsZW5kYXIgPSBDUF9yZWZyZXNoQ2FsZW5kYXI7Yy5nZXRDYWxlbmRhciA9IENQX2dldENhbGVuZGFyO2Muc2VsZWN0ID0gQ1Bfc2VsZWN0O2Muc2V0Q3NzUHJlZml4ID0gQ1Bfc2V0Q3NzUHJlZml4O2Muc2hvd05hdmlnYXRpb25Ecm9wZG93bnMgPSBDUF9zaG93TmF2aWdhdGlvbkRyb3Bkb3ducztjLnNob3dZZWFyTmF2aWdhdGlvbklucHV0ID0gQ1Bfc2hvd1llYXJOYXZpZ2F0aW9uSW5wdXQ7Yy5jb3B5TW9udGhOYW1lc1RvV2luZG93KCk7cmV0dXJuIGM7fQpmdW5jdGlvbiBDUF9jb3B5TW9udGhOYW1lc1RvV2luZG93KCl7aWYodHlwZW9mKHdpbmRvdy5NT05USF9OQU1FUykhPSJ1bmRlZmluZWQiICYmIHdpbmRvdy5NT05USF9OQU1FUyE9bnVsbCl7d2luZG93Lk1PTlRIX05BTUVTID0gbmV3IEFycmF5KCk7Zm9yKHZhciBpPTA7aTx0aGlzLm1vbnRoTmFtZXMubGVuZ3RoO2krKyl7d2luZG93Lk1PTlRIX05BTUVTW3dpbmRvdy5NT05USF9OQU1FUy5sZW5ndGhdID0gdGhpcy5tb250aE5hbWVzW2ldO31mb3IodmFyIGk9MDtpPHRoaXMubW9udGhBYmJyZXZpYXRpb25zLmxlbmd0aDtpKyspe3dpbmRvdy5NT05USF9OQU1FU1t3aW5kb3cuTU9OVEhfTkFNRVMubGVuZ3RoXSA9IHRoaXMubW9udGhBYmJyZXZpYXRpb25zW2ldO319fQpmdW5jdGlvbiBDUF90bXBSZXR1cm5GdW5jdGlvbih5LG0sZCl7aWYod2luZG93LkNQX3RhcmdldElucHV0IT1udWxsKXt2YXIgZHQgPSBuZXcgRGF0ZSh5LG0tMSxkLDAsMCwwKTtpZih3aW5kb3cuQ1BfY2FsZW5kYXJPYmplY3QhPW51bGwpe3dpbmRvdy5DUF9jYWxlbmRhck9iamVjdC5jb3B5TW9udGhOYW1lc1RvV2luZG93KCk7fXdpbmRvdy5DUF90YXJnZXRJbnB1dC52YWx1ZSA9IGZvcm1hdERhdGUoZHQsd2luZG93LkNQX2RhdGVGb3JtYXQpO31lbHNle2FsZXJ0KCdVc2Ugc2V0UmV0dXJuRnVuY3Rpb24oKSB0byBkZWZpbmUgd2hpY2ggZnVuY3Rpb24gd2lsbCBnZXQgdGhlIGNsaWNrZWQgcmVzdWx0cyEnKTt9fQpmdW5jdGlvbiBDUF90bXBSZXR1cm5Nb250aEZ1bmN0aW9uKHksbSl7YWxlcnQoJ1VzZSBzZXRSZXR1cm5Nb250aEZ1bmN0aW9uKCkgdG8gZGVmaW5lIHdoaWNoIGZ1bmN0aW9uIHdpbGwgZ2V0IHRoZSBjbGlja2VkIHJlc3VsdHMhXG5Zb3UgY2xpY2tlZDogeWVhcj0nK3krJyAsIG1vbnRoPScrbSk7fQpmdW5jdGlvbiBDUF90bXBSZXR1cm5RdWFydGVyRnVuY3Rpb24oeSxxKXthbGVydCgnVXNlIHNldFJldHVyblF1YXJ0ZXJGdW5jdGlvbigpIHRvIGRlZmluZSB3aGljaCBmdW5jdGlvbiB3aWxsIGdldCB0aGUgY2xpY2tlZCByZXN1bHRzIVxuWW91IGNsaWNrZWQ6IHllYXI9Jyt5KycgLCBxdWFydGVyPScrcSk7fQpmdW5jdGlvbiBDUF90bXBSZXR1cm5ZZWFyRnVuY3Rpb24oeSl7YWxlcnQoJ1VzZSBzZXRSZXR1cm5ZZWFyRnVuY3Rpb24oKSB0byBkZWZpbmUgd2hpY2ggZnVuY3Rpb24gd2lsbCBnZXQgdGhlIGNsaWNrZWQgcmVzdWx0cyFcbllvdSBjbGlja2VkOiB5ZWFyPScreSk7fQpmdW5jdGlvbiBDUF9zZXRSZXR1cm5GdW5jdGlvbihuYW1lKXt0aGlzLnJldHVybkZ1bmN0aW9uID0gbmFtZTt9CmZ1bmN0aW9uIENQX3NldFJldHVybk1vbnRoRnVuY3Rpb24obmFtZSl7dGhpcy5yZXR1cm5Nb250aEZ1bmN0aW9uID0gbmFtZTt9CmZ1bmN0aW9uIENQX3NldFJldHVyblF1YXJ0ZXJGdW5jdGlvbihuYW1lKXt0aGlzLnJldHVyblF1YXJ0ZXJGdW5jdGlvbiA9IG5hbWU7fQpmdW5jdGlvbiBDUF9zZXRSZXR1cm5ZZWFyRnVuY3Rpb24obmFtZSl7dGhpcy5yZXR1cm5ZZWFyRnVuY3Rpb24gPSBuYW1lO30KZnVuY3Rpb24gQ1Bfc2V0TW9udGhOYW1lcygpe2Zvcih2YXIgaT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe3RoaXMubW9udGhOYW1lc1tpXSA9IGFyZ3VtZW50c1tpXTt9dGhpcy5jb3B5TW9udGhOYW1lc1RvV2luZG93KCk7fQpmdW5jdGlvbiBDUF9zZXRNb250aEFiYnJldmlhdGlvbnMoKXtmb3IodmFyIGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXt0aGlzLm1vbnRoQWJicmV2aWF0aW9uc1tpXSA9IGFyZ3VtZW50c1tpXTt9dGhpcy5jb3B5TW9udGhOYW1lc1RvV2luZG93KCk7fQpmdW5jdGlvbiBDUF9zZXREYXlIZWFkZXJzKCl7Zm9yKHZhciBpPTA7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7dGhpcy5kYXlIZWFkZXJzW2ldID0gYXJndW1lbnRzW2ldO319CmZ1bmN0aW9uIENQX3NldFdlZWtTdGFydERheShkYXkpe3RoaXMud2Vla1N0YXJ0RGF5ID0gZGF5O30KZnVuY3Rpb24gQ1Bfc2hvd1llYXJOYXZpZ2F0aW9uKCl7dGhpcy5pc1Nob3dZZWFyTmF2aWdhdGlvbiA9KGFyZ3VtZW50cy5sZW5ndGg+MCk/YXJndW1lbnRzWzBdOnRydWU7fQpmdW5jdGlvbiBDUF9zZXREaXNwbGF5VHlwZSh0eXBlKXtpZih0eXBlIT0iZGF0ZSImJnR5cGUhPSJ3ZWVrLWVuZCImJnR5cGUhPSJtb250aCImJnR5cGUhPSJxdWFydGVyIiYmdHlwZSE9InllYXIiKXthbGVydCgiSW52YWxpZCBkaXNwbGF5IHR5cGUhIE11c3QgYmUgb25lIG9mOiBkYXRlLHdlZWstZW5kLG1vbnRoLHF1YXJ0ZXIseWVhciIpO3JldHVybiBmYWxzZTt9dGhpcy5kaXNwbGF5VHlwZT10eXBlO30KZnVuY3Rpb24gQ1Bfc2V0WWVhclNlbGVjdFN0YXJ0T2Zmc2V0KG51bSl7dGhpcy55ZWFyU2VsZWN0U3RhcnRPZmZzZXQ9bnVtO30KZnVuY3Rpb24gQ1Bfc2V0RGlzYWJsZWRXZWVrRGF5cygpe3RoaXMuZGlzYWJsZWRXZWVrRGF5cyA9IG5ldyBPYmplY3QoKTtmb3IodmFyIGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXt0aGlzLmRpc2FibGVkV2Vla0RheXNbYXJndW1lbnRzW2ldXSA9IHRydWU7fX0KZnVuY3Rpb24gQ1BfYWRkRGlzYWJsZWREYXRlcyhzdGFydCwgZW5kKXtpZihhcmd1bWVudHMubGVuZ3RoPT0xKXtlbmQ9c3RhcnQ7fWlmKHN0YXJ0PT1udWxsICYmIGVuZD09bnVsbCl7cmV0dXJuO31pZih0aGlzLmRpc2FibGVkRGF0ZXNFeHByZXNzaW9uIT0iIil7dGhpcy5kaXNhYmxlZERhdGVzRXhwcmVzc2lvbis9ICJ8fCI7fWlmKHN0YXJ0IT1udWxsKXtzdGFydCA9IHBhcnNlRGF0ZShzdGFydCk7c3RhcnQ9IiIrc3RhcnQuZ2V0RnVsbFllYXIoKStMWihzdGFydC5nZXRNb250aCgpKzEpK0xaKHN0YXJ0LmdldERhdGUoKSk7fWlmKGVuZCE9bnVsbCl7ZW5kPXBhcnNlRGF0ZShlbmQpO2VuZD0iIitlbmQuZ2V0RnVsbFllYXIoKStMWihlbmQuZ2V0TW9udGgoKSsxKStMWihlbmQuZ2V0RGF0ZSgpKTt9aWYoc3RhcnQ9PW51bGwpe3RoaXMuZGlzYWJsZWREYXRlc0V4cHJlc3Npb24rPSIoZHM8PSIrZW5kKyIpIjt9ZWxzZSBpZihlbmQgID09bnVsbCl7dGhpcy5kaXNhYmxlZERhdGVzRXhwcmVzc2lvbis9Iihkcz49IitzdGFydCsiKSI7fWVsc2V7dGhpcy5kaXNhYmxlZERhdGVzRXhwcmVzc2lvbis9Iihkcz49IitzdGFydCsiJiZkczw9IitlbmQrIikiO319CmZ1bmN0aW9uIENQX3NldFRvZGF5VGV4dCh0ZXh0KXt0aGlzLnRvZGF5VGV4dCA9IHRleHQ7fQpmdW5jdGlvbiBDUF9zZXRDc3NQcmVmaXgodmFsKXt0aGlzLmNzc1ByZWZpeCA9IHZhbDt9CmZ1bmN0aW9uIENQX3Nob3dOYXZpZ2F0aW9uRHJvcGRvd25zKCl7dGhpcy5pc1Nob3dOYXZpZ2F0aW9uRHJvcGRvd25zID0oYXJndW1lbnRzLmxlbmd0aD4wKT9hcmd1bWVudHNbMF06dHJ1ZTt9CmZ1bmN0aW9uIENQX3Nob3dZZWFyTmF2aWdhdGlvbklucHV0KCl7dGhpcy5pc1Nob3dZZWFyTmF2aWdhdGlvbklucHV0ID0oYXJndW1lbnRzLmxlbmd0aD4wKT9hcmd1bWVudHNbMF06dHJ1ZTt9CmZ1bmN0aW9uIENQX2hpZGVDYWxlbmRhcigpe2lmKGFyZ3VtZW50cy5sZW5ndGggPiAwKXt3aW5kb3cucG9wdXBXaW5kb3dPYmplY3RzW2FyZ3VtZW50c1swXV0uaGlkZVBvcHVwKCk7fWVsc2V7dGhpcy5oaWRlUG9wdXAoKTt9fQpmdW5jdGlvbiBDUF9yZWZyZXNoQ2FsZW5kYXIoaW5kZXgpe3ZhciBjYWxPYmplY3QgPSB3aW5kb3cucG9wdXBXaW5kb3dPYmplY3RzW2luZGV4XTtpZihhcmd1bWVudHMubGVuZ3RoPjEpe2NhbE9iamVjdC5wb3B1bGF0ZShjYWxPYmplY3QuZ2V0Q2FsZW5kYXIoYXJndW1lbnRzWzFdLGFyZ3VtZW50c1syXSxhcmd1bWVudHNbM10sYXJndW1lbnRzWzRdLGFyZ3VtZW50c1s1XSkpO31lbHNle2NhbE9iamVjdC5wb3B1bGF0ZShjYWxPYmplY3QuZ2V0Q2FsZW5kYXIoKSk7fWNhbE9iamVjdC5yZWZyZXNoKCk7fQpmdW5jdGlvbiBDUF9zaG93Q2FsZW5kYXIoYW5jaG9ybmFtZSl7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtpZihhcmd1bWVudHNbMV09PW51bGx8fGFyZ3VtZW50c1sxXT09IiIpe3RoaXMuY3VycmVudERhdGU9bmV3IERhdGUoKTt9ZWxzZXt0aGlzLmN1cnJlbnREYXRlPW5ldyBEYXRlKHBhcnNlRGF0ZShhcmd1bWVudHNbMV0pKTt9fXRoaXMucG9wdWxhdGUodGhpcy5nZXRDYWxlbmRhcigpKTt0aGlzLnNob3dQb3B1cChhbmNob3JuYW1lKTt9CmZ1bmN0aW9uIENQX3NlbGVjdChpbnB1dG9iaiwgbGlua25hbWUsIGZvcm1hdCl7dmFyIHNlbGVjdGVkRGF0ZT0oYXJndW1lbnRzLmxlbmd0aD4zKT9hcmd1bWVudHNbM106bnVsbDtpZighd2luZG93LmdldERhdGVGcm9tRm9ybWF0KXthbGVydCgiY2FsZW5kYXIuc2VsZWN0OiBUbyB1c2UgdGhpcyBtZXRob2QgeW91IG11c3QgYWxzbyBpbmNsdWRlICdkYXRlLmpzJyBmb3IgZGF0ZSBmb3JtYXR0aW5nIik7cmV0dXJuO31pZih0aGlzLmRpc3BsYXlUeXBlIT0iZGF0ZSImJnRoaXMuZGlzcGxheVR5cGUhPSJ3ZWVrLWVuZCIpe2FsZXJ0KCJjYWxlbmRhci5zZWxlY3Q6IFRoaXMgZnVuY3Rpb24gY2FuIG9ubHkgYmUgdXNlZCB3aXRoIGRpc3BsYXlUeXBlICdkYXRlJyBvciAnd2Vlay1lbmQnIik7cmV0dXJuO31pZihpbnB1dG9iai50eXBlIT0idGV4dCIgJiYgaW5wdXRvYmoudHlwZSE9ImhpZGRlbiIgJiYgaW5wdXRvYmoudHlwZSE9InRleHRhcmVhIil7YWxlcnQoImNhbGVuZGFyLnNlbGVjdDogSW5wdXQgb2JqZWN0IHBhc3NlZCBpcyBub3QgYSB2YWxpZCBmb3JtIGlucHV0IG9iamVjdCIpO3dpbmRvdy5DUF90YXJnZXRJbnB1dD1udWxsO3JldHVybjt9aWYoaW5wdXRvYmouZGlzYWJsZWQpe3JldHVybjt9d2luZG93LkNQX3RhcmdldElucHV0ID0gaW5wdXRvYmo7d2luZG93LkNQX2NhbGVuZGFyT2JqZWN0ID0gdGhpczt0aGlzLmN1cnJlbnREYXRlPW51bGw7dmFyIHRpbWU9MDtpZihzZWxlY3RlZERhdGUhPW51bGwpe3RpbWUgPSBnZXREYXRlRnJvbUZvcm1hdChzZWxlY3RlZERhdGUsZm9ybWF0KX1lbHNlIGlmKGlucHV0b2JqLnZhbHVlIT0iIil7dGltZSA9IGdldERhdGVGcm9tRm9ybWF0KGlucHV0b2JqLnZhbHVlLGZvcm1hdCk7fWlmKHNlbGVjdGVkRGF0ZSE9bnVsbCB8fCBpbnB1dG9iai52YWx1ZSE9IiIpe2lmKHRpbWU9PTApe3RoaXMuY3VycmVudERhdGU9bnVsbDt9ZWxzZXt0aGlzLmN1cnJlbnREYXRlPW5ldyBEYXRlKHRpbWUpO319d2luZG93LkNQX2RhdGVGb3JtYXQgPSBmb3JtYXQ7dGhpcy5zaG93Q2FsZW5kYXIobGlua25hbWUpO30KZnVuY3Rpb24gZ2V0Q2FsZW5kYXJTdHlsZXMoKXt2YXIgcmVzdWx0ID0gIiI7dmFyIHAgPSAiIjtpZih0aGlzIT1udWxsICYmIHR5cGVvZih0aGlzLmNzc1ByZWZpeCkhPSJ1bmRlZmluZWQiICYmIHRoaXMuY3NzUHJlZml4IT1udWxsICYmIHRoaXMuY3NzUHJlZml4IT0iIil7cD10aGlzLmNzc1ByZWZpeDt9cmVzdWx0ICs9ICI8U1RZTEU+XG4iO3Jlc3VsdCArPSAiLiIrcCsiY3BZZWFyTmF2aWdhdGlvbiwuIitwKyJjcE1vbnRoTmF2aWdhdGlvbntiYWNrZ3JvdW5kLWNvbG9yOiNDMEMwQzA7dGV4dC1hbGlnbjpjZW50ZXI7dmVydGljYWwtYWxpZ246Y2VudGVyO3RleHQtZGVjb3JhdGlvbjpub25lO2NvbG9yOiMwMDAwMDA7Zm9udC13ZWlnaHQ6Ym9sZDt9XG4iO3Jlc3VsdCArPSAiLiIrcCsiY3BEYXlDb2x1bW5IZWFkZXIsIC4iK3ArImNwWWVhck5hdmlnYXRpb24sLiIrcCsiY3BNb250aE5hdmlnYXRpb24sLiIrcCsiY3BDdXJyZW50TW9udGhEYXRlLC4iK3ArImNwQ3VycmVudE1vbnRoRGF0ZURpc2FibGVkLC4iK3ArImNwT3RoZXJNb250aERhdGUsLiIrcCsiY3BPdGhlck1vbnRoRGF0ZURpc2FibGVkLC4iK3ArImNwQ3VycmVudERhdGUsLiIrcCsiY3BDdXJyZW50RGF0ZURpc2FibGVkLC4iK3ArImNwVG9kYXlUZXh0LC4iK3ArImNwVG9kYXlUZXh0RGlzYWJsZWQsLiIrcCsiY3BUZXh0e2ZvbnQtZmFtaWx5OmFyaWFsO2ZvbnQtc2l6ZTo4cHQ7fVxuIjtyZXN1bHQgKz0gIlRELiIrcCsiY3BEYXlDb2x1bW5IZWFkZXJ7dGV4dC1hbGlnbjpyaWdodDtib3JkZXI6c29saWQgdGhpbiAjQzBDMEMwO2JvcmRlci13aWR0aDowcHggMHB4IDFweCAwcHg7fVxuIjtyZXN1bHQgKz0gIi4iK3ArImNwQ3VycmVudE1vbnRoRGF0ZSwgLiIrcCsiY3BPdGhlck1vbnRoRGF0ZSwgLiIrcCsiY3BDdXJyZW50RGF0ZXt0ZXh0LWFsaWduOnJpZ2h0O3RleHQtZGVjb3JhdGlvbjpub25lO31cbiI7cmVzdWx0ICs9ICIuIitwKyJjcEN1cnJlbnRNb250aERhdGVEaXNhYmxlZCwgLiIrcCsiY3BPdGhlck1vbnRoRGF0ZURpc2FibGVkLCAuIitwKyJjcEN1cnJlbnREYXRlRGlzYWJsZWR7Y29sb3I6I0QwRDBEMDt0ZXh0LWFsaWduOnJpZ2h0O3RleHQtZGVjb3JhdGlvbjpsaW5lLXRocm91Z2g7fVxuIjtyZXN1bHQgKz0gIi4iK3ArImNwQ3VycmVudE1vbnRoRGF0ZSwgLmNwQ3VycmVudERhdGV7Y29sb3I6IzAwMDAwMDt9XG4iO3Jlc3VsdCArPSAiLiIrcCsiY3BPdGhlck1vbnRoRGF0ZXtjb2xvcjojODA4MDgwO31cbiI7cmVzdWx0ICs9ICJURC4iK3ArImNwQ3VycmVudERhdGV7Y29sb3I6d2hpdGU7YmFja2dyb3VuZC1jb2xvcjogI0MwQzBDMDtib3JkZXItd2lkdGg6MXB4O2JvcmRlcjpzb2xpZCB0aGluICM4MDAwMDA7fVxuIjtyZXN1bHQgKz0gIlRELiIrcCsiY3BDdXJyZW50RGF0ZURpc2FibGVke2JvcmRlci13aWR0aDoxcHg7Ym9yZGVyOnNvbGlkIHRoaW4gI0ZGQUFBQTt9XG4iO3Jlc3VsdCArPSAiVEQuIitwKyJjcFRvZGF5VGV4dCwgVEQuIitwKyJjcFRvZGF5VGV4dERpc2FibGVke2JvcmRlcjpzb2xpZCB0aGluICNDMEMwQzA7Ym9yZGVyLXdpZHRoOjFweCAwcHggMHB4IDBweDt9XG4iO3Jlc3VsdCArPSAiQS4iK3ArImNwVG9kYXlUZXh0LCBTUEFOLiIrcCsiY3BUb2RheVRleHREaXNhYmxlZHtoZWlnaHQ6MjBweDt9XG4iO3Jlc3VsdCArPSAiQS4iK3ArImNwVG9kYXlUZXh0e2NvbG9yOmJsYWNrO31cbiI7cmVzdWx0ICs9ICIuIitwKyJjcFRvZGF5VGV4dERpc2FibGVke2NvbG9yOiNEMEQwRDA7fVxuIjtyZXN1bHQgKz0gIi4iK3ArImNwQm9yZGVye2JvcmRlcjpzb2xpZCB0aGluICM4MDgwODA7fVxuIjtyZXN1bHQgKz0gIjwvU1RZTEU+XG4iO3JldHVybiByZXN1bHQ7fQpmdW5jdGlvbiBDUF9nZXRDYWxlbmRhcigpe3ZhciBub3cgPSBuZXcgRGF0ZSgpO2lmKHRoaXMudHlwZSA9PSAiV0lORE9XIil7dmFyIHdpbmRvd3JlZiA9ICJ3aW5kb3cub3BlbmVyLiI7fWVsc2V7dmFyIHdpbmRvd3JlZiA9ICIiO312YXIgcmVzdWx0ID0gIiI7aWYodGhpcy50eXBlID09ICJXSU5ET1ciKXtyZXN1bHQgKz0gIjxIVE1MPjxIRUFEPjxUSVRMRT5DYWxlbmRhcjwvVElUTEU+Iit0aGlzLmdldFN0eWxlcygpKyI8L0hFQUQ+PEJPRFkgTUFSR0lOV0lEVEg9MCBNQVJHSU5IRUlHSFQ9MCBUT1BNQVJHSU49MCBSSUdIVE1BUkdJTj0wIExFRlRNQVJHSU49MD5cbiI7cmVzdWx0ICs9ICc8Q0VOVEVSPjxUQUJMRSBXSURUSD0xMDAlIEJPUkRFUj0wIEJPUkRFUldJRFRIPTAgQ0VMTFNQQUNJTkc9MCBDRUxMUEFERElORz0wPlxuJzt9ZWxzZXtyZXN1bHQgKz0gJzxUQUJMRSBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BCb3JkZXIiIFdJRFRIPTE0NCBCT1JERVI9MSBCT1JERVJXSURUSD0xIENFTExTUEFDSU5HPTAgQ0VMTFBBRERJTkc9MT5cbic7cmVzdWx0ICs9ICc8VFI+PFREIEFMSUdOPUNFTlRFUj5cbic7cmVzdWx0ICs9ICc8Q0VOVEVSPlxuJzt9aWYodGhpcy5kaXNwbGF5VHlwZT09ImRhdGUiIHx8IHRoaXMuZGlzcGxheVR5cGU9PSJ3ZWVrLWVuZCIpe2lmKHRoaXMuY3VycmVudERhdGU9PW51bGwpe3RoaXMuY3VycmVudERhdGUgPSBub3c7fWlmKGFyZ3VtZW50cy5sZW5ndGggPiAwKXt2YXIgbW9udGggPSBhcmd1bWVudHNbMF07fWVsc2V7dmFyIG1vbnRoID0gdGhpcy5jdXJyZW50RGF0ZS5nZXRNb250aCgpKzE7fWlmKGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXT4wICYmIGFyZ3VtZW50c1sxXS0wPT1hcmd1bWVudHNbMV0pe3ZhciB5ZWFyID0gYXJndW1lbnRzWzFdO31lbHNle3ZhciB5ZWFyID0gdGhpcy5jdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpO312YXIgZGF5c2lubW9udGg9IG5ldyBBcnJheSgwLDMxLDI4LDMxLDMwLDMxLDMwLDMxLDMxLDMwLDMxLDMwLDMxKTtpZiggKCh5ZWFyJTQgPT0gMCkmJih5ZWFyJTEwMCAhPSAwKSApIHx8KHllYXIlNDAwID09IDApICl7ZGF5c2lubW9udGhbMl0gPSAyOTt9dmFyIGN1cnJlbnRfbW9udGggPSBuZXcgRGF0ZSh5ZWFyLG1vbnRoLTEsMSk7dmFyIGRpc3BsYXlfeWVhciA9IHllYXI7dmFyIGRpc3BsYXlfbW9udGggPSBtb250aDt2YXIgZGlzcGxheV9kYXRlID0gMTt2YXIgd2Vla2RheT0gY3VycmVudF9tb250aC5nZXREYXkoKTt2YXIgb2Zmc2V0ID0gMDtvZmZzZXQgPSh3ZWVrZGF5ID49IHRoaXMud2Vla1N0YXJ0RGF5KSA/IHdlZWtkYXktdGhpcy53ZWVrU3RhcnREYXkgOiA3LXRoaXMud2Vla1N0YXJ0RGF5K3dlZWtkYXkgO2lmKG9mZnNldCA+IDApe2Rpc3BsYXlfbW9udGgtLTtpZihkaXNwbGF5X21vbnRoIDwgMSl7ZGlzcGxheV9tb250aCA9IDEyO2Rpc3BsYXlfeWVhci0tO31kaXNwbGF5X2RhdGUgPSBkYXlzaW5tb250aFtkaXNwbGF5X21vbnRoXS1vZmZzZXQrMTt9dmFyIG5leHRfbW9udGggPSBtb250aCsxO3ZhciBuZXh0X21vbnRoX3llYXIgPSB5ZWFyO2lmKG5leHRfbW9udGggPiAxMil7bmV4dF9tb250aD0xO25leHRfbW9udGhfeWVhcisrO312YXIgbGFzdF9tb250aCA9IG1vbnRoLTE7dmFyIGxhc3RfbW9udGhfeWVhciA9IHllYXI7aWYobGFzdF9tb250aCA8IDEpe2xhc3RfbW9udGg9MTI7bGFzdF9tb250aF95ZWFyLS07fXZhciBkYXRlX2NsYXNzO2lmKHRoaXMudHlwZSE9IldJTkRPVyIpe3Jlc3VsdCArPSAiPFRBQkxFIFdJRFRIPTE0NCBCT1JERVI9MCBCT1JERVJXSURUSD0wIENFTExTUEFDSU5HPTAgQ0VMTFBBRERJTkc9MD4iO31yZXN1bHQgKz0gJzxUUj5cbic7dmFyIHJlZnJlc2ggPSB3aW5kb3dyZWYrJ0NQX3JlZnJlc2hDYWxlbmRhcic7dmFyIHJlZnJlc2hMaW5rID0gJ2phdmFzY3JpcHQ6JyArIHJlZnJlc2g7aWYodGhpcy5pc1Nob3dOYXZpZ2F0aW9uRHJvcGRvd25zKXtyZXN1bHQgKz0gJzxURCBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BNb250aE5hdmlnYXRpb24iIFdJRFRIPSI3OCIgQ09MU1BBTj0iMyI+PHNlbGVjdCBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BNb250aE5hdmlnYXRpb24iIG5hbWU9ImNwTW9udGgiIG9ubW91c2V1cD0iQ1Bfc3RvcChldmVudCkiIG9uQ2hhbmdlPSInK3JlZnJlc2grJygnK3RoaXMuaW5kZXgrJyx0aGlzLm9wdGlvbnNbdGhpcy5zZWxlY3RlZEluZGV4XS52YWx1ZS0wLCcrKHllYXItMCkrJyk7Ij4nO2ZvciggdmFyIG1vbnRoQ291bnRlcj0xO21vbnRoQ291bnRlcjw9MTI7bW9udGhDb3VudGVyKyspe3ZhciBzZWxlY3RlZCA9KG1vbnRoQ291bnRlcj09bW9udGgpID8gJ1NFTEVDVEVEJyA6ICcnO3Jlc3VsdCArPSAnPG9wdGlvbiB2YWx1ZT0iJyttb250aENvdW50ZXIrJyIgJytzZWxlY3RlZCsnPicrdGhpcy5tb250aE5hbWVzW21vbnRoQ291bnRlci0xXSsnPC9vcHRpb24+Jzt9cmVzdWx0ICs9ICc8L3NlbGVjdD48L1REPic7cmVzdWx0ICs9ICc8VEQgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwTW9udGhOYXZpZ2F0aW9uIiBXSURUSD0iMTAiPiZuYnNwOzwvVEQ+JztyZXN1bHQgKz0gJzxURCBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BZZWFyTmF2aWdhdGlvbiIgV0lEVEg9IjU2IiBDT0xTUEFOPSIzIj48c2VsZWN0IENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcFllYXJOYXZpZ2F0aW9uIiBuYW1lPSJjcFllYXIiIG9ubW91c2V1cD0iQ1Bfc3RvcChldmVudCkiIG9uQ2hhbmdlPSInK3JlZnJlc2grJygnK3RoaXMuaW5kZXgrJywnK21vbnRoKycsdGhpcy5vcHRpb25zW3RoaXMuc2VsZWN0ZWRJbmRleF0udmFsdWUtMCk7Ij4nO2ZvciggdmFyIHllYXJDb3VudGVyPXllYXItdGhpcy55ZWFyU2VsZWN0U3RhcnRPZmZzZXQ7eWVhckNvdW50ZXI8PXllYXIrdGhpcy55ZWFyU2VsZWN0U3RhcnRPZmZzZXQ7eWVhckNvdW50ZXIrKyl7dmFyIHNlbGVjdGVkID0oeWVhckNvdW50ZXI9PXllYXIpID8gJ1NFTEVDVEVEJyA6ICcnO3Jlc3VsdCArPSAnPG9wdGlvbiB2YWx1ZT0iJyt5ZWFyQ291bnRlcisnIiAnK3NlbGVjdGVkKyc+Jyt5ZWFyQ291bnRlcisnPC9vcHRpb24+Jzt9cmVzdWx0ICs9ICc8L3NlbGVjdD48L1REPic7fWVsc2V7aWYodGhpcy5pc1Nob3dZZWFyTmF2aWdhdGlvbil7cmVzdWx0ICs9ICc8VEQgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwTW9udGhOYXZpZ2F0aW9uIiBXSURUSD0iMTAiPjxBIENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcE1vbnRoTmF2aWdhdGlvbiIgSFJFRj0iJytyZWZyZXNoTGluaysnKCcrdGhpcy5pbmRleCsnLCcrbGFzdF9tb250aCsnLCcrbGFzdF9tb250aF95ZWFyKycpOyI+Jmx0OzwvQT48L1REPic7cmVzdWx0ICs9ICc8VEQgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwTW9udGhOYXZpZ2F0aW9uIiBXSURUSD0iNTgiPjxTUEFOIENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcE1vbnRoTmF2aWdhdGlvbiI+Jyt0aGlzLm1vbnRoTmFtZXNbbW9udGgtMV0rJzwvU1BBTj48L1REPic7cmVzdWx0ICs9ICc8VEQgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwTW9udGhOYXZpZ2F0aW9uIiBXSURUSD0iMTAiPjxBIENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcE1vbnRoTmF2aWdhdGlvbiIgSFJFRj0iJytyZWZyZXNoTGluaysnKCcrdGhpcy5pbmRleCsnLCcrbmV4dF9tb250aCsnLCcrbmV4dF9tb250aF95ZWFyKycpOyI+Jmd0OzwvQT48L1REPic7cmVzdWx0ICs9ICc8VEQgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwTW9udGhOYXZpZ2F0aW9uIiBXSURUSD0iMTAiPiZuYnNwOzwvVEQ+JztyZXN1bHQgKz0gJzxURCBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BZZWFyTmF2aWdhdGlvbiIgV0lEVEg9IjEwIj48QSBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BZZWFyTmF2aWdhdGlvbiIgSFJFRj0iJytyZWZyZXNoTGluaysnKCcrdGhpcy5pbmRleCsnLCcrbW9udGgrJywnKyh5ZWFyLTEpKycpOyI+Jmx0OzwvQT48L1REPic7aWYodGhpcy5pc1Nob3dZZWFyTmF2aWdhdGlvbklucHV0KXtyZXN1bHQgKz0gJzxURCBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BZZWFyTmF2aWdhdGlvbiIgV0lEVEg9IjM2Ij48SU5QVVQgTkFNRT0iY3BZZWFyIiBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BZZWFyTmF2aWdhdGlvbiIgU0laRT0iNCIgTUFYTEVOR1RIPSI0IiBWQUxVRT0iJyt5ZWFyKyciIG9uQmx1cj0iJytyZWZyZXNoKycoJyt0aGlzLmluZGV4KycsJyttb250aCsnLHRoaXMudmFsdWUtMCk7Ij48L1REPic7fWVsc2V7cmVzdWx0ICs9ICc8VEQgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwWWVhck5hdmlnYXRpb24iIFdJRFRIPSIzNiI+PFNQQU4gQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwWWVhck5hdmlnYXRpb24iPicreWVhcisnPC9TUEFOPjwvVEQ+Jzt9cmVzdWx0ICs9ICc8VEQgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwWWVhck5hdmlnYXRpb24iIFdJRFRIPSIxMCI+PEEgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwWWVhck5hdmlnYXRpb24iIEhSRUY9IicrcmVmcmVzaExpbmsrJygnK3RoaXMuaW5kZXgrJywnK21vbnRoKycsJysoeWVhcisxKSsnKTsiPiZndDs8L0E+PC9URD4nO31lbHNle3Jlc3VsdCArPSAnPFREIENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcE1vbnRoTmF2aWdhdGlvbiIgV0lEVEg9IjIyIj48QSBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BNb250aE5hdmlnYXRpb24iIEhSRUY9IicrcmVmcmVzaExpbmsrJygnK3RoaXMuaW5kZXgrJywnK2xhc3RfbW9udGgrJywnK2xhc3RfbW9udGhfeWVhcisnKTsiPiZsdDsmbHQ7PC9BPjwvVEQ+XG4nO3Jlc3VsdCArPSAnPFREIENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcE1vbnRoTmF2aWdhdGlvbiIgV0lEVEg9IjEwMCI+PFNQQU4gQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwTW9udGhOYXZpZ2F0aW9uIj4nK3RoaXMubW9udGhOYW1lc1ttb250aC0xXSsnICcreWVhcisnPC9TUEFOPjwvVEQ+XG4nO3Jlc3VsdCArPSAnPFREIENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcE1vbnRoTmF2aWdhdGlvbiIgV0lEVEg9IjIyIj48QSBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BNb250aE5hdmlnYXRpb24iIEhSRUY9IicrcmVmcmVzaExpbmsrJygnK3RoaXMuaW5kZXgrJywnK25leHRfbW9udGgrJywnK25leHRfbW9udGhfeWVhcisnKTsiPiZndDsmZ3Q7PC9BPjwvVEQ+XG4nO319cmVzdWx0ICs9ICc8L1RSPjwvVEFCTEU+XG4nO3Jlc3VsdCArPSAnPFRBQkxFIFdJRFRIPTEyMCBCT1JERVI9MCBDRUxMU1BBQ0lORz0wIENFTExQQURESU5HPTEgQUxJR049Q0VOVEVSPlxuJztyZXN1bHQgKz0gJzxUUj5cbic7Zm9yKHZhciBqPTA7ajw3O2orKyl7cmVzdWx0ICs9ICc8VEQgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwRGF5Q29sdW1uSGVhZGVyIiBXSURUSD0iMTQlIj48U1BBTiBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BEYXlDb2x1bW5IZWFkZXIiPicrdGhpcy5kYXlIZWFkZXJzWyh0aGlzLndlZWtTdGFydERheStqKSU3XSsnPC9URD5cbic7fXJlc3VsdCArPSAnPC9UUj5cbic7Zm9yKHZhciByb3c9MTtyb3c8PTY7cm93Kyspe3Jlc3VsdCArPSAnPFRSPlxuJztmb3IodmFyIGNvbD0xO2NvbDw9Nztjb2wrKyl7dmFyIGRpc2FibGVkPWZhbHNlO2lmKHRoaXMuZGlzYWJsZWREYXRlc0V4cHJlc3Npb24hPSIiKXt2YXIgZHM9IiIrZGlzcGxheV95ZWFyK0xaKGRpc3BsYXlfbW9udGgpK0xaKGRpc3BsYXlfZGF0ZSk7ZXZhbCgiZGlzYWJsZWQ9KCIrdGhpcy5kaXNhYmxlZERhdGVzRXhwcmVzc2lvbisiKSIpO312YXIgZGF0ZUNsYXNzID0gIiI7aWYoKGRpc3BsYXlfbW9udGggPT0gdGhpcy5jdXJyZW50RGF0ZS5nZXRNb250aCgpKzEpICYmKGRpc3BsYXlfZGF0ZT09dGhpcy5jdXJyZW50RGF0ZS5nZXREYXRlKCkpICYmKGRpc3BsYXlfeWVhcj09dGhpcy5jdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpKSl7ZGF0ZUNsYXNzID0gImNwQ3VycmVudERhdGUiO31lbHNlIGlmKGRpc3BsYXlfbW9udGggPT0gbW9udGgpe2RhdGVDbGFzcyA9ICJjcEN1cnJlbnRNb250aERhdGUiO31lbHNle2RhdGVDbGFzcyA9ICJjcE90aGVyTW9udGhEYXRlIjt9aWYoZGlzYWJsZWQgfHwgdGhpcy5kaXNhYmxlZFdlZWtEYXlzW2NvbC0xXSl7cmVzdWx0ICs9ICcJPFREIENMQVNTPSInK3RoaXMuY3NzUHJlZml4K2RhdGVDbGFzcysnIj48U1BBTiBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCtkYXRlQ2xhc3MrJ0Rpc2FibGVkIj4nK2Rpc3BsYXlfZGF0ZSsnPC9TUEFOPjwvVEQ+XG4nO31lbHNle3ZhciBzZWxlY3RlZF9kYXRlID0gZGlzcGxheV9kYXRlO3ZhciBzZWxlY3RlZF9tb250aCA9IGRpc3BsYXlfbW9udGg7dmFyIHNlbGVjdGVkX3llYXIgPSBkaXNwbGF5X3llYXI7aWYodGhpcy5kaXNwbGF5VHlwZT09IndlZWstZW5kIil7dmFyIGQgPSBuZXcgRGF0ZShzZWxlY3RlZF95ZWFyLHNlbGVjdGVkX21vbnRoLTEsc2VsZWN0ZWRfZGF0ZSwwLDAsMCwwKTtkLnNldERhdGUoZC5nZXREYXRlKCkgKyg3LWNvbCkpO3NlbGVjdGVkX3llYXIgPSBkLmdldFllYXIoKTtpZihzZWxlY3RlZF95ZWFyIDwgMTAwMCl7c2VsZWN0ZWRfeWVhciArPSAxOTAwO31zZWxlY3RlZF9tb250aCA9IGQuZ2V0TW9udGgoKSsxO3NlbGVjdGVkX2RhdGUgPSBkLmdldERhdGUoKTt9cmVzdWx0ICs9ICcJPFREIENMQVNTPSInK3RoaXMuY3NzUHJlZml4K2RhdGVDbGFzcysnIj48QSBIUkVGPSJqYXZhc2NyaXB0Oicrd2luZG93cmVmK3RoaXMucmV0dXJuRnVuY3Rpb24rJygnK3NlbGVjdGVkX3llYXIrJywnK3NlbGVjdGVkX21vbnRoKycsJytzZWxlY3RlZF9kYXRlKycpOycrd2luZG93cmVmKydDUF9oaWRlQ2FsZW5kYXIoXCcnK3RoaXMuaW5kZXgrJ1wnKTsiIENMQVNTPSInK3RoaXMuY3NzUHJlZml4K2RhdGVDbGFzcysnIj4nK2Rpc3BsYXlfZGF0ZSsnPC9BPjwvVEQ+XG4nO31kaXNwbGF5X2RhdGUrKztpZihkaXNwbGF5X2RhdGUgPiBkYXlzaW5tb250aFtkaXNwbGF5X21vbnRoXSl7ZGlzcGxheV9kYXRlPTE7ZGlzcGxheV9tb250aCsrO31pZihkaXNwbGF5X21vbnRoID4gMTIpe2Rpc3BsYXlfbW9udGg9MTtkaXNwbGF5X3llYXIrKzt9fXJlc3VsdCArPSAnPC9UUj4nO312YXIgY3VycmVudF93ZWVrZGF5ID0gbm93LmdldERheSgpIC0gdGhpcy53ZWVrU3RhcnREYXk7aWYoY3VycmVudF93ZWVrZGF5IDwgMCl7Y3VycmVudF93ZWVrZGF5ICs9IDc7fXJlc3VsdCArPSAnPFRSPlxuJztyZXN1bHQgKz0gJwk8VEQgQ09MU1BBTj03IEFMSUdOPUNFTlRFUiBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BUb2RheVRleHQiPlxuJztpZih0aGlzLmRpc2FibGVkRGF0ZXNFeHByZXNzaW9uIT0iIil7dmFyIGRzPSIiK25vdy5nZXRGdWxsWWVhcigpK0xaKG5vdy5nZXRNb250aCgpKzEpK0xaKG5vdy5nZXREYXRlKCkpO2V2YWwoImRpc2FibGVkPSgiK3RoaXMuZGlzYWJsZWREYXRlc0V4cHJlc3Npb24rIikiKTt9aWYoZGlzYWJsZWQgfHwgdGhpcy5kaXNhYmxlZFdlZWtEYXlzW2N1cnJlbnRfd2Vla2RheSsxXSl7cmVzdWx0ICs9ICcJCTxTUEFOIENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcFRvZGF5VGV4dERpc2FibGVkIj4nK3RoaXMudG9kYXlUZXh0Kyc8L1NQQU4+XG4nO31lbHNle3Jlc3VsdCArPSAnCQk8QSBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BUb2RheVRleHQiIEhSRUY9ImphdmFzY3JpcHQ6Jyt3aW5kb3dyZWYrdGhpcy5yZXR1cm5GdW5jdGlvbisnKFwnJytub3cuZ2V0RnVsbFllYXIoKSsnXCcsXCcnKyhub3cuZ2V0TW9udGgoKSsxKSsnXCcsXCcnK25vdy5nZXREYXRlKCkrJ1wnKTsnK3dpbmRvd3JlZisnQ1BfaGlkZUNhbGVuZGFyKFwnJyt0aGlzLmluZGV4KydcJyk7Ij4nK3RoaXMudG9kYXlUZXh0Kyc8L0E+XG4nO31yZXN1bHQgKz0gJwkJPEJSPlxuJztyZXN1bHQgKz0gJwk8L1REPjwvVFI+PC9UQUJMRT48L0NFTlRFUj48L1REPjwvVFI+PC9UQUJMRT5cbic7fWlmKHRoaXMuZGlzcGxheVR5cGU9PSJtb250aCIgfHwgdGhpcy5kaXNwbGF5VHlwZT09InF1YXJ0ZXIiIHx8IHRoaXMuZGlzcGxheVR5cGU9PSJ5ZWFyIil7aWYoYXJndW1lbnRzLmxlbmd0aCA+IDApe3ZhciB5ZWFyID0gYXJndW1lbnRzWzBdO31lbHNle2lmKHRoaXMuZGlzcGxheVR5cGU9PSJ5ZWFyIil7dmFyIHllYXIgPSBub3cuZ2V0RnVsbFllYXIoKS10aGlzLnllYXJTZWxlY3RTdGFydE9mZnNldDt9ZWxzZXt2YXIgeWVhciA9IG5vdy5nZXRGdWxsWWVhcigpO319aWYodGhpcy5kaXNwbGF5VHlwZSE9InllYXIiICYmIHRoaXMuaXNTaG93WWVhck5hdmlnYXRpb24pe3Jlc3VsdCArPSAiPFRBQkxFIFdJRFRIPTE0NCBCT1JERVI9MCBCT1JERVJXSURUSD0wIENFTExTUEFDSU5HPTAgQ0VMTFBBRERJTkc9MD4iO3Jlc3VsdCArPSAnPFRSPlxuJztyZXN1bHQgKz0gJwk8VEQgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwWWVhck5hdmlnYXRpb24iIFdJRFRIPSIyMiI+PEEgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwWWVhck5hdmlnYXRpb24iIEhSRUY9ImphdmFzY3JpcHQ6Jyt3aW5kb3dyZWYrJ0NQX3JlZnJlc2hDYWxlbmRhcignK3RoaXMuaW5kZXgrJywnKyh5ZWFyLTEpKycpOyI+Jmx0OyZsdDs8L0E+PC9URD5cbic7cmVzdWx0ICs9ICcJPFREIENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcFllYXJOYXZpZ2F0aW9uIiBXSURUSD0iMTAwIj4nK3llYXIrJzwvVEQ+XG4nO3Jlc3VsdCArPSAnCTxURCBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BZZWFyTmF2aWdhdGlvbiIgV0lEVEg9IjIyIj48QSBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BZZWFyTmF2aWdhdGlvbiIgSFJFRj0iamF2YXNjcmlwdDonK3dpbmRvd3JlZisnQ1BfcmVmcmVzaENhbGVuZGFyKCcrdGhpcy5pbmRleCsnLCcrKHllYXIrMSkrJyk7Ij4mZ3Q7Jmd0OzwvQT48L1REPlxuJztyZXN1bHQgKz0gJzwvVFI+PC9UQUJMRT5cbic7fX1pZih0aGlzLmRpc3BsYXlUeXBlPT0ibW9udGgiKXtyZXN1bHQgKz0gJzxUQUJMRSBXSURUSD0xMjAgQk9SREVSPTAgQ0VMTFNQQUNJTkc9MSBDRUxMUEFERElORz0wIEFMSUdOPUNFTlRFUj5cbic7Zm9yKHZhciBpPTA7aTw0O2krKyl7cmVzdWx0ICs9ICc8VFI+Jztmb3IodmFyIGo9MDtqPDM7aisrKXt2YXIgbW9udGhpbmRleCA9KChpKjMpK2opO3Jlc3VsdCArPSAnPFREIFdJRFRIPTMzJSBBTElHTj1DRU5URVI+PEEgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwVGV4dCIgSFJFRj0iamF2YXNjcmlwdDonK3dpbmRvd3JlZit0aGlzLnJldHVybk1vbnRoRnVuY3Rpb24rJygnK3llYXIrJywnKyhtb250aGluZGV4KzEpKycpOycrd2luZG93cmVmKydDUF9oaWRlQ2FsZW5kYXIoXCcnK3RoaXMuaW5kZXgrJ1wnKTsiIENMQVNTPSInK2RhdGVfY2xhc3MrJyI+Jyt0aGlzLm1vbnRoQWJicmV2aWF0aW9uc1ttb250aGluZGV4XSsnPC9BPjwvVEQ+Jzt9cmVzdWx0ICs9ICc8L1RSPic7fXJlc3VsdCArPSAnPC9UQUJMRT48L0NFTlRFUj48L1REPjwvVFI+PC9UQUJMRT5cbic7fWlmKHRoaXMuZGlzcGxheVR5cGU9PSJxdWFydGVyIil7cmVzdWx0ICs9ICc8QlI+PFRBQkxFIFdJRFRIPTEyMCBCT1JERVI9MSBDRUxMU1BBQ0lORz0wIENFTExQQURESU5HPTAgQUxJR049Q0VOVEVSPlxuJztmb3IodmFyIGk9MDtpPDI7aSsrKXtyZXN1bHQgKz0gJzxUUj4nO2Zvcih2YXIgaj0wO2o8MjtqKyspe3ZhciBxdWFydGVyID0oKGkqMikraisxKTtyZXN1bHQgKz0gJzxURCBXSURUSD01MCUgQUxJR049Q0VOVEVSPjxCUj48QSBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BUZXh0IiBIUkVGPSJqYXZhc2NyaXB0Oicrd2luZG93cmVmK3RoaXMucmV0dXJuUXVhcnRlckZ1bmN0aW9uKycoJyt5ZWFyKycsJytxdWFydGVyKycpOycrd2luZG93cmVmKydDUF9oaWRlQ2FsZW5kYXIoXCcnK3RoaXMuaW5kZXgrJ1wnKTsiIENMQVNTPSInK2RhdGVfY2xhc3MrJyI+UScrcXVhcnRlcisnPC9BPjxCUj48QlI+PC9URD4nO31yZXN1bHQgKz0gJzwvVFI+Jzt9cmVzdWx0ICs9ICc8L1RBQkxFPjwvQ0VOVEVSPjwvVEQ+PC9UUj48L1RBQkxFPlxuJzt9aWYodGhpcy5kaXNwbGF5VHlwZT09InllYXIiKXt2YXIgeWVhckNvbHVtblNpemUgPSA0O3Jlc3VsdCArPSAiPFRBQkxFIFdJRFRIPTE0NCBCT1JERVI9MCBCT1JERVJXSURUSD0wIENFTExTUEFDSU5HPTAgQ0VMTFBBRERJTkc9MD4iO3Jlc3VsdCArPSAnPFRSPlxuJztyZXN1bHQgKz0gJwk8VEQgQ0xBU1M9IicrdGhpcy5jc3NQcmVmaXgrJ2NwWWVhck5hdmlnYXRpb24iIFdJRFRIPSI1MCUiPjxBIENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcFllYXJOYXZpZ2F0aW9uIiBIUkVGPSJqYXZhc2NyaXB0Oicrd2luZG93cmVmKydDUF9yZWZyZXNoQ2FsZW5kYXIoJyt0aGlzLmluZGV4KycsJysoeWVhci0oeWVhckNvbHVtblNpemUqMikpKycpOyI+Jmx0OyZsdDs8L0E+PC9URD5cbic7cmVzdWx0ICs9ICcJPFREIENMQVNTPSInK3RoaXMuY3NzUHJlZml4KydjcFllYXJOYXZpZ2F0aW9uIiBXSURUSD0iNTAlIj48QSBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BZZWFyTmF2aWdhdGlvbiIgSFJFRj0iamF2YXNjcmlwdDonK3dpbmRvd3JlZisnQ1BfcmVmcmVzaENhbGVuZGFyKCcrdGhpcy5pbmRleCsnLCcrKHllYXIrKHllYXJDb2x1bW5TaXplKjIpKSsnKTsiPiZndDsmZ3Q7PC9BPjwvVEQ+XG4nO3Jlc3VsdCArPSAnPC9UUj48L1RBQkxFPlxuJztyZXN1bHQgKz0gJzxUQUJMRSBXSURUSD0xMjAgQk9SREVSPTAgQ0VMTFNQQUNJTkc9MSBDRUxMUEFERElORz0wIEFMSUdOPUNFTlRFUj5cbic7Zm9yKHZhciBpPTA7aTx5ZWFyQ29sdW1uU2l6ZTtpKyspe2Zvcih2YXIgaj0wO2o8MjtqKyspe3ZhciBjdXJyZW50eWVhciA9IHllYXIrKGoqeWVhckNvbHVtblNpemUpK2k7cmVzdWx0ICs9ICc8VEQgV0lEVEg9NTAlIEFMSUdOPUNFTlRFUj48QSBDTEFTUz0iJyt0aGlzLmNzc1ByZWZpeCsnY3BUZXh0IiBIUkVGPSJqYXZhc2NyaXB0Oicrd2luZG93cmVmK3RoaXMucmV0dXJuWWVhckZ1bmN0aW9uKycoJytjdXJyZW50eWVhcisnKTsnK3dpbmRvd3JlZisnQ1BfaGlkZUNhbGVuZGFyKFwnJyt0aGlzLmluZGV4KydcJyk7IiBDTEFTUz0iJytkYXRlX2NsYXNzKyciPicrY3VycmVudHllYXIrJzwvQT48L1REPic7fXJlc3VsdCArPSAnPC9UUj4nO31yZXN1bHQgKz0gJzwvVEFCTEU+PC9DRU5URVI+PC9URD48L1RSPjwvVEFCTEU+XG4nO31pZih0aGlzLnR5cGUgPT0gIldJTkRPVyIpe3Jlc3VsdCArPSAiPC9CT0RZPjwvSFRNTD5cbiI7fXJldHVybiByZXN1bHQ7fQoK\"></script>
<script language=\"JavaScript\">document.write(getCalendarStyles());</script>\n";
?>

